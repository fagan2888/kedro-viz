{"version":3,"sources":["components/easter-egg/brodyquest.mp3","components/easter-egg/easter-egg.png","actions/index.js","reducers/index.js","config.js","utils/index.js","selectors/tags.js","selectors/linked-nodes.js","selectors/nodes.js","selectors/edges.js","selectors/layout.js","components/flowchart/icon.js","components/flowchart/draw.js","components/flowchart/index.js","components/tag-list/index.js","components/node-list/index.js","components/chart-ui/index.js","components/icons/menu.js","components/sidebar/index.js","components/icon-toolbar/icon-button.js","components/icons/label.js","components/icons/theme.js","components/icons/export.js","components/icon-toolbar/export-modal.js","components/icon-toolbar/index.js","components/wrapper/index.js","utils/format-data.js","components/app/initial-state.js","utils/random-data.js","utils/data/lorem-ipsum.mock.js","utils/data/animals.mock.js","utils/data/demo.mock.js","components/app/load-data.js","components/app/check-font-loaded.js","components/app/index.js","store/index.js","components/easter-egg/index.js","index.js"],"names":["module","exports","CHANGE_VIEW","RESET_DATA","TOGGLE_NODE_CLICKED","TOGGLE_NODE_DISABLED","TOGGLE_NODES_DISABLED","TOGGLE_NODE_HOVERED","toggleNodeHovered","nodeHovered","type","TOGGLE_PARAMETERS","TOGGLE_TEXT_LABELS","TOGGLE_TAG_ACTIVE","TOGGLE_TAG_FILTER","TOGGLE_THEME","UPDATE_CHART_SIZE","UPDATE_FONT_LOADED","reducer","state","action","Object","assign","view","data","nodeClicked","nodeDisabled","nodeID","isDisabled","nodeIDs","reduce","disabled","id","paramIDs","nodes","filter","nodeIsParam","parameters","textLabels","tagActive","tagID","active","tagEnabled","enabled","theme","chartSize","fontLoaded","getDataSource","source","qs","window","location","search","match","REACT_APP_DATA_SOURCE","process","encodeURIComponent","host","validateDataSource","expectedInput","includes","Error","join","config","dataPath","dataSource","localStorageName","arrayToObject","array","callback","newObject","forEach","key","getNumberArray","n","Array","from","keys","randomIndex","Math","floor","random","randomNumber","ceil","getRandom","range","length","LOREM_IPSUM","split","getRandomName","map","unique","d","i","arr","indexOf","loadState","serializedState","localStorage","getItem","JSON","parse","err","console","error","saveState","stringify","setItem","getTags","tags","getTagEnabled","getTagData","createSelector","tagName","sort","name","Boolean","getTagCount","total","getCentralNode","clickedNode","hoveredNode","getLinkedNodes","edges","edgeSources","edgeTargets","linkedNodes","traverseGraph","prev","next","walk","edge","direction","apply","reverse","getNodes","getNodeName","nodeName","getNodeDisabledNode","getNodeTags","nodeTags","getNodeType","nodeType","getNodeDisabledTag","tagCount","some","tag","getNodeDisabledView","getNodeDisabled","nodeDisabledNode","nodeDisabledTag","nodeDisabledView","getNodeActive","centralNode","activeViaTag","getNodeData","nodeActive","a","b","disabled_node","disabled_tag","disabled_view","getNodeTextWidth","svg","select","document","body","append","attr","nodeTextWidth","node","text","getBBox","width","remove","getNodeSize","showLabels","isTask","iconSize","padding","x","y","textWidth","innerWidth","height","textOffset","iconOffset","getVisibleNodes","nodeFullName","nodeSize","label","fullName","getEdges","getEdgeSources","getEdgeTargets","getEdgeDisabledNode","edgeID","target","getEdgeDisabled","edgeDisabledNode","getTransitiveEdges","transitiveEdges","edgeIDs","sources","targets","edgeGraphWalker","path","concat","push","addNewEdge","findTransitiveEdges","getVisibleEdges","edgeDisabled","getGraph","graph","dagre","graphlib","Graph","setGraph","marginx","marginy","setNode","setEdge","layout","getLayoutNodes","order","getLayoutEdges","getGraphSize","getZoomPosition","container","every","isNaN","Number","isFinite","scale","min","translateX","translateY","paths","task","svgNode","createElementNS","draw","this","props","el","edgeGroup","selectAll","nodeGroup","lineShape","line","curve","curveBasis","enterEdges","enter","exit","transition","duration","DURATION","merge","classed","attrTween","current","points","previous","interpolatePath","enterNodes","icon","on","handleNodeClick","handleNodeMouseOver","handleNodeMouseOut","handleNodeKeyDown","end","catch","finally","FlowChart","handleWindowResize","updateChartSize","onToggleNodeClicked","event","stopPropagation","handleChartClick","onToggleNodeHovered","showTooltip","hideTooltip","keyCode","tooltipVisible","tooltipIsRight","tooltipText","tooltipX","tooltipY","containerRef","React","createRef","svgRef","wrapperRef","edgesRef","nodesRef","selectD3Elements","initZoomBehaviour","drawChart","zoomChart","addResizeObserver","removeResizeObserver","prevProps","visibleNav","zoom","wrapper","getBoundingClientRect","left","top","navOffset","getNavOffset","onUpdateChartSize","outerWidth","outerHeight","ResizeObserver","resizeObserver","observe","addEventListener","unobserve","removeEventListener","zoomBehaviour","transform","call","zoomIdentity","translate","eventOffset","isRight","xOffset","setState","className","ref","onClick","viewBox","refX","refY","markerUnits","markerWidth","markerHeight","orient","classnames","style","Component","connect","dispatch","toggleNodeClicked","onToggleTagActive","toggleTagActive","onToggleTagFilter","toggleTagFilter","defaultText","Fragment","title","onMouseEnter","onMouseLeave","checked","onChange","e","escapeRegExp","utils","getHighlightedText","handleKeyEvent","NodeList","searchValue","handleKeyDown","bind","updateSearchValue","results","result","highlightedLabel","valueRegex","RegExp","nodeMatchesSearch","escape","onToggleAllNodes","onToggleNodeDisabled","formattedNodes","highlightMatch","filterResults","onKeyDown","value","autoHide","hideTracksWhenNotNeeded","dangerouslySetInnerHTML","__html","toggleNodeDisabled","hasData","onChangeView","onToggleParameters","xmlns","ShowMenuButton","onToggle","visible","aria-label","HideMenuButton","Sidebar","icons","export","IconButton","ariaLabel","ariaLive","labelText","Icon","aria-live","defaultProps","exportGraph","download","querySelector","clone","parentNode","appendChild","cloneNode","setAttribute","removeAttribute","createElement","innerHTML","prepend","removeChild","graphSize","toggleModal","onClose","downloadPng","downloadSvg","onToggleTextLabels","onToggleTheme","useState","isModalVisible","themeBtn","labelBtn","exportBtn","Wrapper","toggleNav","formatData","edgeActive","isArray","validateInput","schema_id","full_name","addNode","getEdgeID","addEdge","addTag","getInitialState","pipelineData","MAX_CONNECTED_NODES","MAX_LAYER_COUNT","MAX_TAG_COUNT","Pipeline","CONNECTION_COUNT","LAYER_COUNT","TAG_COUNT","generateTags","paramFreq","count","getLayer","getRandomNodeName","replace","layer","generateNodeList","condition","getRandomTags","getConnectedNodes","findIndex","getSchema","generateRandomPipeline","getDatum","loadData","onLoadData","getRandomPipeline","loremIpsum","animals","demo","json","then","loadJsonData","checkFontLoaded","store","Promise","resolve","fonts","fontName","setLoaded","check","checkIfLoaded","setTimeout","ready","onloadingdone","requestAnimationFrame","step","performance","now","App","resetStoreData","initialState","createStore","subscribe","getState","formattedData","EasterEgg","play","info","audio","Audio","mp3","loop","_handleKeyDown","KonamiCode","listen","_toggleState","_toggleAudio","_toggleCSS","classList","pause","add","src","img","alt","ReactDOM","render","getElementById"],"mappings":"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J,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACRqJ,OAAQ,YAEV,CACErJ,OAAQ,WACR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","file":"static/js/main.3d83bff8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/brodyquest.6259cc84.mp3\";","module.exports = __webpack_public_path__ + \"static/media/easter-egg.e702bd5f.png\";","export const CHANGE_VIEW = 'CHANGE_VIEW';\n\n/**\n * Change the view mode, which handles how the nodes should be filtered.\n * @param {string} view One of 'combined', 'data', or 'task'\n */\nexport function changeView(view) {\n  return {\n    type: CHANGE_VIEW,\n    view\n  };\n}\n\nexport const RESET_DATA = 'RESET_DATA';\n\n/**\n * Overwrite the existing data store when receiving new data from upstream\n * @param {Object} data New pipeline state data\n */\nexport function resetData(data) {\n  return {\n    type: RESET_DATA,\n    data\n  };\n}\n\nexport const TOGGLE_NODE_CLICKED = 'TOGGLE_NODE_CLICKED';\n\n/**\n * Update the value of the currently-active clicked node\n * @param {string|null} nodeClicked The node's unique identifier\n */\nexport function toggleNodeClicked(nodeClicked) {\n  return {\n    type: TOGGLE_NODE_CLICKED,\n    nodeClicked\n  };\n}\n\nexport const TOGGLE_NODE_DISABLED = 'TOGGLE_NODE_DISABLED';\n\n/**\n * Toggle a node's visibility on/off\n * @param {string} nodeID The node's unique identifier\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodeDisabled(nodeID, isDisabled) {\n  return {\n    type: TOGGLE_NODE_DISABLED,\n    nodeID,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODES_DISABLED = 'TOGGLE_NODES_DISABLED';\n\n/**\n * Toggle a selected group of nodes' visibility on/off\n * @param {Array} nodeIDs The nodes' unique identifiers\n * @param {Boolean} isDisabled Whether the node should be visible\n */\nexport function toggleNodesDisabled(nodeIDs, isDisabled) {\n  return {\n    type: TOGGLE_NODES_DISABLED,\n    nodeIDs,\n    isDisabled\n  };\n}\n\nexport const TOGGLE_NODE_HOVERED = 'TOGGLE_NODE_HOVERED';\n\n/**\n * Update the value of the currently-active hovered node\n * @param {string|null} nodeHovered The node's unique identifier\n */\nexport function toggleNodeHovered(nodeHovered) {\n  return {\n    type: TOGGLE_NODE_HOVERED,\n    nodeHovered\n  };\n}\n\nexport const TOGGLE_PARAMETERS = 'TOGGLE_PARAMETERS';\n\n/**\n * Toggle whether to show Parameters on/off\n * @param {Boolean} parameters Whether to show Parameters\n */\nexport function toggleParameters(parameters) {\n  return {\n    type: TOGGLE_PARAMETERS,\n    parameters\n  };\n}\n\nexport const TOGGLE_TEXT_LABELS = 'TOGGLE_TEXT_LABELS';\n\n/**\n * Toggle whether to show text labels on/off\n * @param {Boolean} textLabels True if text labels are to be shown\n */\nexport function toggleTextLabels(textLabels) {\n  return {\n    type: TOGGLE_TEXT_LABELS,\n    textLabels\n  };\n}\n\nexport const TOGGLE_TAG_ACTIVE = 'TOGGLE_TAG_ACTIVE';\n\n/**\n * Toggle a tag's highlighting on/off\n * @param {string} tagID Tag id\n * @param {Boolean} active True if tag is active\n */\nexport function toggleTagActive(tagID, active) {\n  return {\n    type: TOGGLE_TAG_ACTIVE,\n    tagID,\n    active\n  };\n}\n\nexport const TOGGLE_TAG_FILTER = 'TOGGLE_TAG_FILTER';\n\n/**\n * Toggle a tag on/off\n * @param {string} tagID Tag id\n * @param {Boolean} enabled True if tag is enabled\n */\nexport function toggleTagFilter(tagID, enabled) {\n  return {\n    type: TOGGLE_TAG_FILTER,\n    tagID,\n    enabled\n  };\n}\n\nexport const TOGGLE_THEME = 'TOGGLE_THEME';\n\n/**\n * Switch between light/dark theme\n * @param {string} theme Theme name\n */\nexport function toggleTheme(theme) {\n  return {\n    type: TOGGLE_THEME,\n    theme\n  };\n}\n\nexport const UPDATE_CHART_SIZE = 'UPDATE_CHART_SIZE';\n\n/**\n * Store the chart size, based on the window\n * @param {Object} chartSize getBoundingClientRect value\n */\nexport function updateChartSize(chartSize) {\n  return {\n    type: UPDATE_CHART_SIZE,\n    chartSize\n  };\n}\n\nexport const UPDATE_FONT_LOADED = 'UPDATE_FONT_LOADED';\n\n/**\n * Update whether the webfont has loaded, which should block the chart render\n * @param {Boolean} fontLoaded Whether the font has loaded\n */\nexport function updateFontLoaded(fontLoaded) {\n  return {\n    type: UPDATE_FONT_LOADED,\n    fontLoaded\n  };\n}\n","import {\n  CHANGE_VIEW,\n  RESET_DATA,\n  TOGGLE_NODE_CLICKED,\n  TOGGLE_NODE_DISABLED,\n  TOGGLE_NODES_DISABLED,\n  TOGGLE_NODE_HOVERED,\n  TOGGLE_PARAMETERS,\n  TOGGLE_TAG_ACTIVE,\n  TOGGLE_TAG_FILTER,\n  TOGGLE_TEXT_LABELS,\n  TOGGLE_THEME,\n  UPDATE_CHART_SIZE,\n  UPDATE_FONT_LOADED\n} from '../actions';\n\nfunction reducer(state = {}, action) {\n  switch (action.type) {\n    case CHANGE_VIEW:\n      return Object.assign({}, state, {\n        view: action.view\n      });\n\n    case RESET_DATA:\n      return Object.assign({}, state, action.data);\n\n    case TOGGLE_NODE_CLICKED: {\n      return Object.assign({}, state, {\n        nodeClicked: action.nodeClicked\n      });\n    }\n\n    case TOGGLE_NODE_DISABLED: {\n      return Object.assign({}, state, {\n        nodeDisabled: Object.assign({}, state.nodeDisabled, {\n          [action.nodeID]: action.isDisabled\n        })\n      });\n    }\n\n    case TOGGLE_NODES_DISABLED: {\n      return Object.assign({}, state, {\n        nodeDisabled: action.nodeIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: action.isDisabled\n            }),\n          state.nodeDisabled\n        )\n      });\n    }\n\n    case TOGGLE_NODE_HOVERED: {\n      return Object.assign({}, state, {\n        nodeHovered: action.nodeHovered\n      });\n    }\n\n    case TOGGLE_PARAMETERS: {\n      const paramIDs = state.nodes.filter(id => state.nodeIsParam[id]);\n      return Object.assign({}, state, {\n        nodeDisabled: paramIDs.reduce(\n          (disabled, id) =>\n            Object.assign({}, disabled, {\n              [id]: !action.parameters\n            }),\n          state.nodeDisabled\n        ),\n        parameters: action.parameters\n      });\n    }\n\n    case TOGGLE_TEXT_LABELS:\n      return Object.assign({}, state, {\n        textLabels: action.textLabels\n      });\n\n    case TOGGLE_TAG_ACTIVE: {\n      return Object.assign({}, state, {\n        tagActive: Object.assign({}, state.tagActive, {\n          [action.tagID]: action.active\n        })\n      });\n    }\n\n    case TOGGLE_TAG_FILTER: {\n      return Object.assign({}, state, {\n        tagEnabled: Object.assign({}, state.tagEnabled, {\n          [action.tagID]: action.enabled\n        })\n      });\n    }\n\n    case TOGGLE_THEME: {\n      return Object.assign({}, state, {\n        theme: action.theme\n      });\n    }\n\n    case UPDATE_CHART_SIZE: {\n      return Object.assign({}, state, {\n        chartSize: action.chartSize\n      });\n    }\n\n    case UPDATE_FONT_LOADED: {\n      return Object.assign({}, state, {\n        fontLoaded: action.fontLoaded\n      });\n    }\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","/**\n * Determine which data source to use\n * @return {string} Data source type key\n */\nconst getDataSource = () => {\n  let source;\n  const qs = window.location.search.match(/data=(\\w+)/);\n  const { REACT_APP_DATA_SOURCE } = process.env;\n  if (qs) {\n    source = encodeURIComponent(qs[1]);\n  } else if (REACT_APP_DATA_SOURCE) {\n    source = REACT_APP_DATA_SOURCE;\n  } else if (window.location.host === 'quantumblacklabs.github.io') {\n    source = 'demo';\n  }\n  return validateDataSource(source);\n};\n\n/**\n * Validate against expected results\n * @param {string} source Input type key\n * @return {string} Data source type key\n */\nconst validateDataSource = source => {\n  const expectedInput = ['lorem', 'animals', 'demo', 'json', 'random'];\n  if (expectedInput.includes(source)) {\n    return source;\n  }\n  if (source) {\n    throw new Error(\n      `Unexpected data source value '${source}'. Your input should be one of the following values: ${expectedInput.join(\n        ', '\n      )}.`\n    );\n  }\n  return 'json';\n};\n\n/**\n * Generate a configuration object for use across the application\n */\nconst config = () => ({\n  dataPath: '/api/nodes.json',\n  dataSource: getDataSource(),\n  localStorageName: 'KedroViz'\n});\n\nexport default config;\n","import config from '../config';\n\n//--- Useful JS utility functions ---//\n\n/**\n * Loop through an array and output to an object\n * @param {Array} array\n * @param {Function} callback\n */\nexport const arrayToObject = (array, callback) => {\n  const newObject = {};\n  array.forEach(key => {\n    newObject[key] = callback(key);\n  });\n  return newObject;\n};\n\n/**\n * Format a UNIX timestamp into a human-readable string\n * @param {number|string} datetime A UNIX timestamp\n * @returns {string} The date and time but prettier\n */\nexport const formatTime = datetime => {\n  const d = new Date(+datetime);\n  return `${d.toDateString()} ${d.toLocaleTimeString()}`;\n};\n\n/**\n * Get an array of numbers\n * @param {number} n Length of the array\n */\nexport const getNumberArray = n => Array.from(Array(n).keys());\n\n/**\n * Get a random number between 0 to n-1, inclusive\n * @param {number} n Max number\n */\nexport const randomIndex = n => Math.floor(Math.random() * n);\n\n/**\n * Get a random number between 1 to n, inclusive\n * @param {number} n Max number\n */\nexport const randomNumber = n => Math.ceil(Math.random() * n);\n\n/**\n * Get a random datum from an array\n * @param {Array} range The array to select a random item from\n */\nexport const getRandom = range => range[randomIndex(range.length)];\n\nconst LOREM_IPSUM = 'lorem ipsum dolor sit amet consectetur adipiscing elit vestibulum id turpis nunc nulla vitae diam dignissim fermentum elit sit amet viverra libero quisque condimentum pellentesque convallis sed consequat neque ac rhoncus finibus'.split(\n  ' '\n);\n\n/**\n * Generate a random latin name\n * @param {number} n Number of words in the name\n * @param {string} join The character(s) used to join each word\n */\nexport const getRandomName = (n, join = '_') =>\n  getNumberArray(n)\n    .map(() => getRandom(LOREM_IPSUM))\n    .join(join);\n\n/**\n * Filter duplicate values from an array\n * @param {any} d Datum\n * @param {number} i Index\n * @param {Array} arr The array to remove duplicate values from\n */\nexport const unique = (d, i, arr) => arr.indexOf(d) === i;\n\n/**\n * Retrieve state data from localStorage\n * @return {Object} State\n */\nexport const loadState = () => {\n  const { localStorageName } = config();\n  try {\n    const serializedState = window.localStorage.getItem(localStorageName);\n    if (serializedState === null) {\n      return {};\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    console.error(err);\n    return {};\n  }\n};\n\n/**\n * Save updated state to localStorage\n * @param {Object} state New state object\n */\nexport const saveState = state => {\n  const { localStorageName } = config();\n  try {\n    const serializedState = JSON.stringify(state);\n    window.localStorage.setItem(localStorageName, serializedState);\n  } catch (err) {\n    console.error(err);\n  }\n};\n","import { createSelector } from 'reselect';\n\nconst getTags = state => state.tags;\nconst getTagName = state => state.tagName;\nconst getTagActive = state => state.tagActive;\nconst getTagEnabled = state => state.tagEnabled;\n\n/**\n * Retrieve the formatted list of tag filters\n * @param {Object} tags Active pipeline tag data\n * @return {Array} Tag data list\n */\nexport const getTagData = createSelector(\n  [getTags, getTagName, getTagActive, getTagEnabled],\n  (tags, tagName, tagActive, tagEnabled) =>\n    tags.sort().map(id => ({\n      id,\n      name: tagName[id],\n      active: Boolean(tagActive[id]),\n      enabled: Boolean(tagEnabled[id])\n    }))\n);\n\n/**\n * Get the total and enabled number of tags\n * @param {Array} tags List of tag objects\n * @return {Object} total / enabled tags\n */\nexport const getTagCount = createSelector(\n  [getTags, getTagEnabled],\n  (tags, tagEnabled) => ({\n    total: tags.length,\n    enabled: tags.filter(id => tagEnabled[id]).length\n  })\n);\n","import { createSelector } from 'reselect';\n\nconst getEdges = state => state.edges;\nconst getEdgeSources = state => state.edgeSources;\nconst getEdgeTargets = state => state.edgeTargets;\nconst getClickedNode = state => state.nodeClicked;\nconst getHoveredNode = state => state.nodeHovered;\n\n/**\n * Get the node that should be used as the center of the set of linked nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getCentralNode = createSelector(\n  [getClickedNode, getHoveredNode],\n  (clickedNode, hoveredNode) => clickedNode || hoveredNode\n);\n\n/**\n * Recursively search through the edges data for ancestor and descendant nodes\n * @param {Array} edges\n * @param {string} nodeID\n */\nexport const getLinkedNodes = createSelector(\n  [getEdges, getEdgeSources, getEdgeTargets, getCentralNode],\n  (edges, edgeSources, edgeTargets, nodeID) => {\n    if (!nodeID) {\n      return {};\n    }\n\n    const linkedNodes = {\n      [nodeID]: true\n    };\n\n    const traverseGraph = (prev, next) => {\n      (function walk(id) {\n        edges.forEach(edge => {\n          if (prev[edge] === id) {\n            linkedNodes[next[edge]] = true;\n            walk(next[edge]);\n          }\n        });\n      })(nodeID);\n    };\n\n    const direction = [edgeSources, edgeTargets];\n    traverseGraph.apply(null, direction);\n    traverseGraph.apply(null, direction.reverse());\n\n    return linkedNodes;\n  }\n);\n","import { createSelector } from 'reselect';\nimport { select } from 'd3-selection';\nimport { arrayToObject } from '../utils';\nimport { getTagCount } from './tags';\nimport { getCentralNode } from './linked-nodes';\n\nconst getNodes = state => state.nodes;\nconst getView = state => state.view;\nconst getNodeName = state => state.nodeName;\nconst getNodeFullName = state => state.nodeFullName;\nconst getNodeDisabledNode = state => state.nodeDisabled;\nconst getNodeTags = state => state.nodeTags;\nconst getNodeType = state => state.nodeType;\nconst getTagActive = state => state.tagActive;\nconst getTagEnabled = state => state.tagEnabled;\nconst getTextLabels = state => state.textLabels;\nconst getFontLoaded = state => state.fontLoaded;\n\n/**\n * Calculate whether nodes should be disabled based on their tags\n */\nexport const getNodeDisabledTag = createSelector(\n  [getNodes, getTagEnabled, getTagCount, getNodeTags],\n  (nodes, tagEnabled, tagCount, nodeTags) =>\n    arrayToObject(nodes, nodeID => {\n      if (tagCount.enabled === 0) {\n        return false;\n      }\n      if (nodeTags[nodeID].length) {\n        // Hide task nodes that don't have at least one tag filter enabled\n        return !nodeTags[nodeID].some(tag => tagEnabled[tag]);\n      }\n      return true;\n    })\n);\n\n/**\n * Calculate whether nodes should be disabled based on the view\n */\nexport const getNodeDisabledView = createSelector(\n  [getNodes, getNodeType, getView],\n  (nodes, nodeType, view) =>\n    arrayToObject(\n      nodes,\n      nodeID => view !== 'combined' && view !== nodeType[nodeID]\n    )\n);\n\n/**\n * Set disabled status if the node is specifically hidden, and/or via a tag/view\n */\nexport const getNodeDisabled = createSelector(\n  [getNodes, getNodeDisabledNode, getNodeDisabledTag, getNodeDisabledView],\n  (nodes, nodeDisabledNode, nodeDisabledTag, nodeDisabledView) =>\n    arrayToObject(nodes, id =>\n      Boolean(\n        nodeDisabledNode[id] || nodeDisabledTag[id] || nodeDisabledView[id]\n      )\n    )\n);\n\n/**\n * Set active status if the node is specifically highlighted, and/or via an associated tag\n * @return {Boolean} True if active\n */\nexport const getNodeActive = createSelector(\n  [getNodes, getCentralNode, getNodeTags, getTagActive],\n  (nodes, centralNode, nodeTags, tagActive) =>\n    arrayToObject(nodes, nodeID => {\n      if (nodeID === centralNode) {\n        return true;\n      }\n      const activeViaTag = nodeTags[nodeID].some(tag => tagActive[tag]);\n      return Boolean(activeViaTag);\n    })\n);\n\n/**\n * Returns formatted nodes as an array, with all relevant properties\n */\nexport const getNodeData = createSelector(\n  [\n    getNodes,\n    getNodeName,\n    getNodeType,\n    getNodeActive,\n    getNodeDisabled,\n    getNodeDisabledNode,\n    getNodeDisabledTag,\n    getNodeDisabledView\n  ],\n  (\n    nodes,\n    nodeName,\n    nodeType,\n    nodeActive,\n    nodeDisabled,\n    nodeDisabledNode,\n    nodeDisabledTag,\n    nodeDisabledView\n  ) =>\n    nodes\n      .sort((a, b) => {\n        if (nodeName[a] < nodeName[b]) return -1;\n        if (nodeName[a] > nodeName[b]) return 1;\n        return 0;\n      })\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        type: nodeType[id],\n        active: nodeActive[id],\n        disabled: nodeDisabled[id],\n        disabled_node: Boolean(nodeDisabledNode[id]),\n        disabled_tag: nodeDisabledTag[id],\n        disabled_view: nodeDisabledView[id]\n      }))\n);\n\n/**\n * Temporarily create a new SVG container in the DOM, write a node to it,\n * measure its width with getBBox, then delete the container and store the value\n */\nexport const getNodeTextWidth = createSelector(\n  [getNodes, getNodeName, getFontLoaded],\n  (nodes, nodeName) => {\n    const svg = select(document.body)\n      .append('svg')\n      .attr('class', 'kedro node');\n    const nodeTextWidth = arrayToObject(nodes, nodeID => {\n      const text = svg.append('text').text(nodeName[nodeID]);\n      const node = text.node();\n      const width = node.getBBox ? node.getBBox().width : 0;\n      return width;\n    });\n    svg.remove();\n    return nodeTextWidth;\n  }\n);\n\n/**\n * Get the top/bottom and left/right padding for a node\n * @param {Boolean} showLabels Whether labels are visible\n * @param {Boolean} isTask Whether the node is a task type (vs data/params)\n */\nexport const getPadding = (showLabels, isTask) => {\n  if (showLabels) {\n    return { x: 16, y: 10 };\n  }\n  if (isTask) {\n    return { x: 14, y: 14 };\n  }\n  return { x: 16, y: 16 };\n};\n\n/**\n * Calculate node width/height and icon/text positioning\n */\nexport const getNodeSize = createSelector(\n  [getNodes, getNodeTextWidth, getTextLabels, getNodeType],\n  (nodes, nodeTextWidth, textLabels, nodeType) =>\n    arrayToObject(nodes, nodeID => {\n      const iconSize = textLabels ? 14 : 24;\n      const padding = getPadding(textLabels, nodeType[nodeID] === 'task');\n      const textWidth = textLabels ? nodeTextWidth[nodeID] : 0;\n      const textGap = textLabels ? 6 : 0;\n      const innerWidth = iconSize + textWidth + textGap;\n      return {\n        width: innerWidth + padding.x * 2,\n        height: iconSize + padding.y * 2,\n        textOffset: (innerWidth - textWidth) / 2,\n        iconOffset: -innerWidth / 2,\n        iconSize\n      };\n    })\n);\n\n/**\n * Returns only visible nodes as an array, but without any extra properties\n * that are unnecessary for the chart layout calculation\n */\nexport const getVisibleNodes = createSelector(\n  [\n    getNodes,\n    getNodeName,\n    getNodeType,\n    getNodeDisabled,\n    getNodeFullName,\n    getNodeSize\n  ],\n  (nodes, nodeName, nodeType, nodeDisabled, nodeFullName, nodeSize) =>\n    nodes\n      .filter(id => !nodeDisabled[id])\n      .map(id => ({\n        id,\n        name: nodeName[id],\n        label: nodeName[id],\n        fullName: nodeFullName[id],\n        type: nodeType[id],\n        ...nodeSize[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport { arrayToObject } from '../utils';\nimport { getNodeDisabled } from './nodes';\n\nconst getNodes = state => state.nodes;\nconst getEdges = state => state.edges;\nconst getEdgeSources = state => state.edgeSources;\nconst getEdgeTargets = state => state.edgeTargets;\n\n/**\n * Calculate whether edges should be disabled based on their source/target nodes\n */\nexport const getEdgeDisabledNode = createSelector(\n  [getEdges, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (edges, nodeDisabled, edgeSources, edgeTargets) =>\n    arrayToObject(edges, edgeID => {\n      const source = edgeSources[edgeID];\n      const target = edgeTargets[edgeID];\n      return nodeDisabled[source] || nodeDisabled[target];\n    })\n);\n\n/**\n * Determine whether an edge should be disabled\n */\nexport const getEdgeDisabled = createSelector(\n  [getEdges, getEdgeDisabledNode],\n  (edges, edgeDisabledNode) =>\n    arrayToObject(edges, edgeID => Boolean(edgeDisabledNode[edgeID]))\n);\n\n/**\n * Create a new transitive edge from the first and last edge in the path\n * @param {string} target Node ID for the new edge\n * @param {string} source Node ID for the new edge\n * @param {object} transitiveEdges Store of existing edges\n */\nexport const addNewEdge = (source, target, { edgeIDs, sources, targets }) => {\n  const id = [source, target].join('|');\n  if (!edgeIDs.includes(id)) {\n    edgeIDs.push(id);\n    sources[id] = source;\n    targets[id] = target;\n  }\n};\n\n/**\n * Recursively walk through the graph, stepping over disabled nodes,\n * generating a list of nodes visited so far, and create transitive edges\n * for each path that visits disabled nodes between enabled nodes.\n * @param {Array} path The route that has been explored so far\n */\nexport const findTransitiveEdges = (\n  edges,\n  transitiveEdges,\n  { edgeSources, edgeTargets, nodeDisabled }\n) => {\n  /**\n   * Recursively walk through the graph, stepping over disabled nodes,\n   * generating a list of nodes visited so far, and create transitive edges\n   * for each path that visits disabled nodes between enabled nodes.\n   * @param {Array} path The route that has been explored so far\n   */\n  const edgeGraphWalker = path => {\n    edges.forEach(edgeID => {\n      const source = path[path.length - 1];\n      // Filter to only edges where the source node is the previous target\n      if (edgeSources[edgeID] !== source) {\n        return;\n      }\n      const target = edgeTargets[edgeID];\n      if (nodeDisabled[target]) {\n        // If target node is disabled then keep walking the graph\n        edgeGraphWalker(path.concat(target));\n      } else if (path.length > 1) {\n        // Else only create a new edge if there would be 3 or more nodes in the path\n        addNewEdge(path[0], target, transitiveEdges);\n      }\n    });\n  };\n\n  return edgeGraphWalker;\n};\n\n/**\n * Create new edges to connect nodes which have a disabled node (or nodes)\n * in between them\n */\nexport const getTransitiveEdges = createSelector(\n  [getNodes, getEdges, getNodeDisabled, getEdgeSources, getEdgeTargets],\n  (nodes, edges, nodeDisabled, edgeSources, edgeTargets) => {\n    const transitiveEdges = {\n      edgeIDs: [],\n      sources: {},\n      targets: {}\n    };\n    // Examine the children of every enabled node. The walk only needs\n    // to be run in a single direction (i.e. top down), because links\n    // that end in a terminus can never be transitive.\n    nodes.forEach(nodeID => {\n      if (!nodeDisabled[nodeID]) {\n        findTransitiveEdges(edges, transitiveEdges, {\n          edgeSources,\n          edgeTargets,\n          nodeDisabled\n        })([nodeID]);\n      }\n    });\n    return transitiveEdges;\n  }\n);\n\n/**\n * Get only the visible edges (plus transitive edges),\n * and return them formatted as an array of objects\n */\nexport const getVisibleEdges = createSelector(\n  [\n    getEdges,\n    getEdgeDisabled,\n    getEdgeSources,\n    getEdgeTargets,\n    getTransitiveEdges\n  ],\n  (edges, edgeDisabled, edgeSources, edgeTargets, transitiveEdges) =>\n    edges\n      .filter(id => !edgeDisabled[id])\n      .concat(transitiveEdges.edgeIDs)\n      .map(id => ({\n        id,\n        source: edgeSources[id] || transitiveEdges.sources[id],\n        target: edgeTargets[id] || transitiveEdges.targets[id]\n      }))\n);\n","import { createSelector } from 'reselect';\nimport dagre from 'dagre';\nimport { getNodeActive, getVisibleNodes } from './nodes';\nimport { getVisibleEdges } from './edges';\n\nconst getNodeType = state => state.nodeType;\nconst getChartSize = state => state.chartSize;\n\n/**\n * Calculate chart layout with Dagre.js.\n * This is an extremely expensive operation so we want it to run as infrequently\n * as possible, and keep it separate from other properties (like node.active)\n * which don't affect layout.\n */\nexport const getGraph = createSelector(\n  [getVisibleNodes, getVisibleEdges],\n  (nodes, edges) => {\n    const graph = new dagre.graphlib.Graph().setGraph({\n      marginx: 40,\n      marginy: 40\n    });\n\n    nodes.forEach(node => {\n      graph.setNode(node.id, node);\n    });\n\n    edges.forEach(edge => {\n      graph.setEdge(edge.source, edge.target, edge);\n    });\n\n    // Run Dagre layout to calculate X/Y positioning\n    dagre.layout(graph);\n\n    return graph;\n  }\n);\n\n/**\n * Reformat node data for use on the chart,\n * and recombine with other data that doesn't affect layout\n */\nexport const getLayoutNodes = createSelector(\n  [getGraph, getNodeType, getNodeActive],\n  (graph, nodeType, nodeActive) =>\n    graph.nodes().map(nodeID => {\n      const node = graph.node(nodeID);\n      return Object.assign({}, node, {\n        type: nodeType[nodeID],\n        order: node.x + node.y * 9999,\n        active: nodeActive[nodeID]\n      });\n    })\n);\n\n/**\n * Reformat edge data for use on the chart\n */\nexport const getLayoutEdges = createSelector(\n  [getGraph],\n  graph => graph.edges().map(edge => Object.assign({}, graph.edge(edge)))\n);\n\n/**\n * Get width, height and margin of graph\n */\nexport const getGraphSize = createSelector(\n  [getGraph],\n  graph => graph.graph()\n);\n\n/**\n * Get chart zoom translation/scale,\n * by comparing native graph width/height to container width/height\n */\nexport const getZoomPosition = createSelector(\n  [getGraphSize, getChartSize],\n  (graph, container) => {\n    const validDimensions = [\n      container.width,\n      container.height,\n      graph.width,\n      graph.height\n    ].every(n => !isNaN(n) && Number.isFinite(n));\n\n    if (validDimensions) {\n      const scale = Math.min(\n        container.width / graph.width,\n        container.height / graph.height\n      );\n      return {\n        scale,\n        translateX: container.width / 2 - (graph.width * scale) / 2,\n        translateY: container.height / 2 - (graph.height * scale) / 2\n      };\n    }\n    return {\n      scale: 1,\n      translateX: 0,\n      translateY: 0\n    };\n  }\n);\n","import { select } from 'd3-selection';\n\nconst paths = {\n  // database icon\n  data: [\n    'M12 1c4.3 0 7.8 1.5 8 3.4v15.1c0 2-3.6 3.5-8 3.5s-8-1.6-8-3.5V4.4C4.2 2.5 7.7 1 12 1zm0 17a14 14 0 01-6-1.2v3a14 14 0 006 1.2 14 14 0 006-1.2v-3a14 14 0 01-6 1.2zm0-5a14 14 0 01-6-1.2v3a14 14 0 006 1.2 14 14 0 006-1.2v-3a14 14 0 01-6 1.2zm0-5a14 14 0 01-6-1.2v3a14 14 0 006 1.2 14 14 0 006-1.2v-3A14 14 0 0112 8zm.3-5H12c-3.3 0-6 .7-6 1.5S8.7 6 12 6s6-.7 6-1.5S15.5 3 12.3 3z'\n  ],\n  // cogs icon\n  task: [\n    'M6.05.75L7.857.332a1.236 1.236 0 011.445.792l.039.134.22.95c.789.079 1.557.295 2.271.638l.303.154.714-.666a1.236 1.236 0 011.647-.036l.1.097 1.266 1.357c.432.466.437 1.176.032 1.647l-.093.097-.715.666c.33.722.529 1.496.589 2.286l.017.34.933.284c.61.187.97.801.854 1.413l-.033.131-.542 1.774a1.236 1.236 0 01-1.408.855l-.136-.034-.935-.285a6.755 6.755 0 01-1.682 1.65l-.285.185.221.956a1.236 1.236 0 01-.797 1.448l-.135.038-1.806.417a1.236 1.236 0 01-1.445-.792l-.039-.134-.22-.95a6.863 6.863 0 01-2.273-.636l-.302-.154-.715.665a1.236 1.236 0 01-1.647.035l-.1-.096L1.934 14.2a1.236 1.236 0 01-.035-1.647l.097-.1.715-.667a6.75 6.75 0 01-.588-2.285l-.018-.34-.933-.285A1.236 1.236 0 01.32 7.468l.033-.135.543-1.771a1.236 1.236 0 011.408-.855l.136.034.935.285a6.75 6.75 0 011.682-1.65l.285-.185-.221-.956A1.236 1.236 0 015.914.788L6.05.75zm1.875 4.004a4.333 4.333 0 101.95 8.444 4.333 4.333 0 00-1.95-8.444zm.549 2.375a1.896 1.896 0 11.852 3.694 1.896 1.896 0 01-.852-3.694zM19.02 13.214l1.123.218a.76.76 0 01.615.773l-.013.12-.115.588c.416.237.787.543 1.099.905l.15.185.569-.196a.76.76 0 01.919.362l.048.11.371 1.08a.761.761 0 01-.375.924l-.095.04-.569.196c.004.466-.07.928-.218 1.367l-.098.261.453.394c.29.253.343.677.138.99l-.063.083-.749.862a.76.76 0 01-.976.146l-.097-.071-.454-.395a4.157 4.157 0 01-1.33.502l-.235.038-.116.593a.76.76 0 01-.776.616l-.12-.014-1.12-.218a.76.76 0 01-.615-.773l.013-.119.115-.589a4.223 4.223 0 01-1.073-.874l-.178-.215-.568.195a.76.76 0 01-.92-.362l-.047-.11-.372-1.08a.76.76 0 01.362-.918l.11-.048.57-.196c-.005-.465.07-.927.218-1.366l.098-.26-.453-.395a.76.76 0 01-.147-.977l.071-.097.749-.86a.76.76 0 01.977-.146l.096.071.455.395a4.154 4.154 0 011.33-.501l.235-.038.115-.593a.76.76 0 01.774-.617l.12.014zm.053 2.721a2.667 2.667 0 10-1.017 5.235 2.667 2.667 0 001.017-5.235zm-.286 1.472a1.167 1.167 0 11-.445 2.29 1.167 1.167 0 01.445-2.29z'\n  ],\n  // sliders icon\n  parameters: [\n    'M11.2 18a3 3 0 0 0 0 2H3v-2h8.2zm9.8 0v2h-4.2a3 3 0 0 0 0-2H21zM5.2 11a3 3 0 0 0 0 2H3v-2h2.2zM21 11v2H10.8a3 3 0 0 0 0-2H21zm-9-6c0 .4 0 .7.2 1H3V4h9.2a3 3 0 0 0-.2 1zm9-1v2h-3.2a3 3 0 0 0 0-2H21zM14 17a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm-6-7a2 2 0 1 1 0 4 2 2 0 0 1 0-4zm7-7a2 2 0 1 1 0 4 2 2 0 0 1 0-4z'\n  ]\n};\n\n/**\n * Generate cog/database icon.\n * Inline SVG is required to support image exports\n */\nexport default node => {\n  const svgNode = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n  const svg = select(svgNode)\n    .attr('class', 'node__icon')\n    .attr('viewBox', '0 0 24 24');\n\n  paths[node.type].forEach(path => {\n    svg.append('path').attr('d', path);\n  });\n\n  return svgNode;\n};\n","import 'd3-transition';\nimport { interpolatePath } from 'd3-interpolate-path';\nimport { select } from 'd3-selection';\nimport { curveBasis, line } from 'd3-shape';\nimport icon from './icon';\n\n/**\n * Render chart to the DOM with D3\n */\nconst draw = function() {\n  const { nodes, edges, centralNode, linkedNodes, textLabels } = this.props;\n\n  // Create selections\n  this.el.edges = this.el.edgeGroup\n    .selectAll('.edge')\n    .data(edges, edge => edge.id);\n\n  this.el.nodes = this.el.nodeGroup\n    .selectAll('.node')\n    .data(nodes, node => node.id);\n\n  // Set up line shape function\n  const lineShape = line()\n    .x(d => d.x)\n    .y(d => d.y)\n    .curve(curveBasis);\n\n  // Create edges\n  const enterEdges = this.el.edges\n    .enter()\n    .append('g')\n    .attr('class', 'edge')\n    .attr('opacity', 0);\n\n  enterEdges.append('path').attr('marker-end', d => `url(#arrowhead)`);\n\n  this.el.edges\n    .exit()\n    .transition('exit-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.edges = this.el.edges.merge(enterEdges);\n\n  this.el.edges\n    .attr('data-id', edge => edge.id)\n    .classed(\n      'edge--faded',\n      ({ source, target }) =>\n        centralNode && (!linkedNodes[source] || !linkedNodes[target])\n    )\n    .transition('show-edges')\n    .duration(this.DURATION)\n    .attr('opacity', 1);\n\n  this.el.edges\n    .select('path')\n    .transition('update-edges')\n    .duration(this.DURATION)\n    .attrTween('d', function(edge) {\n      const current = edge.points && lineShape(edge.points);\n      const previous = select(this).attr('d') || current;\n      return interpolatePath(previous, current);\n    });\n\n  // Create nodes\n  const enterNodes = this.el.nodes\n    .enter()\n    .append('g')\n    .attr('tabindex', '0')\n    .attr('class', 'node');\n\n  enterNodes\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .attr('opacity', 0);\n\n  enterNodes.append('rect');\n\n  enterNodes.append(icon);\n\n  enterNodes\n    .append('text')\n    .text(node => node.name)\n    .attr('text-anchor', 'middle')\n    .attr('dy', 3.5)\n    .attr('dx', node => node.textOffset);\n\n  this.el.nodes\n    .exit()\n    .transition('exit-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 0)\n    .remove();\n\n  this.el.nodes = this.el.nodes\n    .merge(enterNodes)\n    .attr('data-id', node => node.id)\n    .classed('node--parameters', node => node.type === 'parameters')\n    .classed('node--data', node => node.type === 'data')\n    .classed('node--task', node => node.type === 'task')\n    .classed('node--icon', !textLabels)\n    .classed('node--text', textLabels)\n    .classed('node--active', node => node.active)\n    .classed('node--highlight', node => centralNode && linkedNodes[node.id])\n    .classed('node--faded', node => centralNode && !linkedNodes[node.id])\n    .on('click', this.handleNodeClick)\n    .on('mouseover', this.handleNodeMouseOver)\n    .on('mouseout', this.handleNodeMouseOut)\n    .on('focus', this.handleNodeMouseOver)\n    .on('blur', this.handleNodeMouseOut)\n    .on('keydown', this.handleNodeKeyDown);\n\n  this.el.nodes\n    .transition('update-nodes')\n    .duration(this.DURATION)\n    .attr('opacity', 1)\n    .attr('transform', node => `translate(${node.x}, ${node.y})`)\n    .end()\n    .catch(() => {})\n    .finally(() => {\n      // Sort nodes so tab focus order follows X/Y position\n      this.el.nodes.sort((a, b) => a.order - b.order);\n    });\n\n  this.el.nodes\n    .select('rect')\n    .attr('width', node => node.width - 5)\n    .attr('height', node => node.height - 5)\n    .attr('x', node => (node.width - 5) / -2)\n    .attr('y', node => (node.height - 5) / -2)\n    .attr('rx', node => (node.type === 'task' ? 0 : node.height / 2));\n\n  this.el.nodes\n    .select('.node__icon')\n    .transition('node-icon-offset')\n    .duration(150)\n    .attr('width', node => node.iconSize)\n    .attr('height', node => node.iconSize)\n    .attr('x', node => node.iconOffset)\n    .attr('y', node => node.iconSize / -2);\n};\n\nexport default draw;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport 'd3-transition';\nimport { select, event } from 'd3-selection';\nimport { zoom, zoomIdentity } from 'd3-zoom';\nimport {\n  toggleNodeClicked,\n  toggleNodeHovered,\n  updateChartSize\n} from '../../actions';\nimport {\n  getLayoutNodes,\n  getLayoutEdges,\n  getZoomPosition\n} from '../../selectors/layout';\nimport { getCentralNode, getLinkedNodes } from '../../selectors/linked-nodes';\nimport draw from './draw';\nimport './styles/flowchart.css';\n\n/**\n * Display a pipeline flowchart, mostly rendered with D3\n */\nexport class FlowChart extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      tooltipVisible: false,\n      tooltipIsRight: false,\n      tooltipText: null,\n      tooltipX: 0,\n      tooltipY: 0\n    };\n\n    this.DURATION = 700;\n\n    this.containerRef = React.createRef();\n    this.svgRef = React.createRef();\n    this.wrapperRef = React.createRef();\n    this.edgesRef = React.createRef();\n    this.nodesRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.selectD3Elements();\n    this.updateChartSize();\n    this.initZoomBehaviour();\n    this.drawChart();\n    this.zoomChart();\n    this.addResizeObserver();\n  }\n\n  componentWillUnmount() {\n    this.removeResizeObserver();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.visibleNav !== this.props.visibleNav) {\n      this.updateChartSize();\n    }\n    if (prevProps.zoom !== this.props.zoom) {\n      this.zoomChart();\n    }\n    this.drawChart();\n  }\n\n  /**\n   * Create D3 element selectors\n   */\n  selectD3Elements() {\n    this.el = {\n      svg: select(this.svgRef.current),\n      wrapper: select(this.wrapperRef.current),\n      edgeGroup: select(this.edgesRef.current),\n      nodeGroup: select(this.nodesRef.current)\n    };\n  }\n\n  /**\n   * Configure globals for the container dimensions,\n   * and apply them to the chart SVG\n   */\n  updateChartSize() {\n    const {\n      left,\n      top,\n      width,\n      height\n    } = this.containerRef.current.getBoundingClientRect();\n    const navOffset = this.getNavOffset(width);\n    this.props.onUpdateChartSize({\n      x: left,\n      y: top,\n      outerWidth: width,\n      outerHeight: height,\n      width: width - navOffset,\n      height,\n      navOffset\n    });\n  }\n\n  getNavOffset(width) {\n    const navWidth = 300; // from _variables.scss\n    const breakpointSmall = 480; // from _variables.scss\n    if (this.props.visibleNav && width > breakpointSmall) {\n      return navWidth;\n    }\n    return 0;\n  }\n\n  /**\n   * Add ResizeObserver to listen for any changes in the container's width/height\n   * (with event listener fallback)\n   */\n  addResizeObserver() {\n    if (window.ResizeObserver) {\n      this.resizeObserver =\n        this.resizeObserver ||\n        new window.ResizeObserver(this.handleWindowResize);\n      this.resizeObserver.observe(this.containerRef.current);\n    } else {\n      window.addEventListener('resize', this.handleWindowResize);\n    }\n  }\n\n  /**\n   * Remove ResizeObserver (or event listener fallback) on unmount\n   */\n  removeResizeObserver() {\n    if (window.ResizeObserver) {\n      this.resizeObserver.unobserve(this.containerRef.current);\n    } else {\n      window.removeEventListener('resize', this.handleWindowResize);\n    }\n  }\n\n  /**\n   * Handle window resize\n   */\n  handleWindowResize = () => {\n    this.updateChartSize();\n  };\n\n  /**\n   * Setup D3 zoom behaviour on component mount\n   */\n  initZoomBehaviour() {\n    this.zoomBehaviour = zoom().on('zoom', () => {\n      this.el.wrapper.attr('transform', event.transform);\n      this.hideTooltip();\n    });\n    this.el.svg.call(this.zoomBehaviour);\n  }\n\n  /**\n   * Zoom and scale to fit\n   */\n  zoomChart() {\n    const { chartSize, zoom } = this.props;\n    const { scale, translateX, translateY } = zoom;\n    const navOffset = this.getNavOffset(chartSize.outerWidth);\n    this.el.svg\n      .transition()\n      .duration(this.DURATION)\n      .call(\n        this.zoomBehaviour.transform,\n        zoomIdentity.translate(translateX + navOffset, translateY).scale(scale)\n      );\n  }\n\n  /**\n   * Render chart to the DOM with D3\n   */\n  drawChart() {\n    draw.call(this);\n  }\n\n  /**\n   * Enable a node's focus state and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeClick = node => {\n    this.props.onToggleNodeClicked(node.id);\n    event.stopPropagation();\n  };\n\n  /**\n   * Remove a node's focus state and dim linked nodes\n   */\n  handleChartClick = () => {\n    this.props.onToggleNodeClicked(null);\n  };\n\n  /**\n   * Enable a node's active state, show tooltip, and highlight linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOver = node => {\n    this.props.onToggleNodeHovered(node.id);\n    this.showTooltip(node);\n  };\n\n  /**\n   * Remove a node's active state, hide tooltip, and dim linked nodes\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeMouseOut = () => {\n    this.props.onToggleNodeHovered(null);\n    this.hideTooltip();\n  };\n\n  /**\n   * Handle keydown event when a node is focused\n   * @param {Object} node Datum for a single node\n   */\n  handleNodeKeyDown = node => {\n    const ENTER = 13;\n    const ESCAPE = 27;\n    if (event.keyCode === ENTER) {\n      this.handleNodeClick(node);\n    }\n    if (event.keyCode === ESCAPE) {\n      this.handleChartClick();\n      this.handleNodeMouseOut(node);\n    }\n  };\n\n  /**\n   * Show, fill and and position the tooltip\n   * @param {Object} node A node datum\n   */\n  showTooltip(node) {\n    const { chartSize } = this.props;\n    const eventOffset = event.target.getBoundingClientRect();\n    const navOffset = this.getNavOffset(chartSize.outerWidth);\n    const isRight = eventOffset.left - navOffset > chartSize.width / 2;\n    const xOffset = isRight\n      ? eventOffset.left - (chartSize.width + navOffset)\n      : eventOffset.left;\n    this.setState({\n      tooltipVisible: true,\n      tooltipIsRight: isRight,\n      tooltipText: node.fullName,\n      tooltipX: xOffset - chartSize.x + eventOffset.width / 2,\n      tooltipY: eventOffset.top - chartSize.y\n    });\n  }\n\n  /**\n   * Hide the tooltip\n   */\n  hideTooltip() {\n    if (this.state.tooltipVisible) {\n      this.setState({\n        tooltipVisible: false\n      });\n    }\n  }\n\n  /**\n   * Render React elements\n   */\n  render() {\n    const { outerWidth, outerHeight } = this.props.chartSize;\n    const {\n      tooltipVisible,\n      tooltipIsRight,\n      tooltipText,\n      tooltipX,\n      tooltipY\n    } = this.state;\n\n    return (\n      <div\n        className=\"pipeline-flowchart kedro\"\n        ref={this.containerRef}\n        onClick={this.handleChartClick}>\n        <svg\n          id=\"pipeline-graph\"\n          className=\"pipeline-flowchart__graph\"\n          width={outerWidth}\n          height={outerHeight}\n          ref={this.svgRef}>\n          <defs>\n            <marker\n              id=\"arrowhead\"\n              className=\"pipeline-flowchart__arrowhead\"\n              viewBox=\"0 0 10 10\"\n              refX=\"7\"\n              refY=\"5\"\n              markerUnits=\"strokeWidth\"\n              markerWidth=\"8\"\n              markerHeight=\"6\"\n              orient=\"auto\">\n              <path d=\"M 0 0 L 10 5 L 0 10 L 4 5 z\" />\n            </marker>\n          </defs>\n          <g id=\"zoom-wrapper\" ref={this.wrapperRef}>\n            <g className=\"pipeline-flowchart__edges\" ref={this.edgesRef} />\n            <g\n              id=\"nodes\"\n              className=\"pipeline-flowchart__nodes\"\n              ref={this.nodesRef}\n            />\n          </g>\n        </svg>\n        <div\n          className={classnames('pipeline-flowchart__tooltip kedro', {\n            'tooltip--visible': tooltipVisible,\n            'tooltip--right': tooltipIsRight\n          })}\n          style={{ transform: `translate(${tooltipX}px, ${tooltipY}px)` }}>\n          <span>{tooltipText}</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  centralNode: getCentralNode(state),\n  chartSize: state.chartSize,\n  edges: getLayoutEdges(state),\n  linkedNodes: getLinkedNodes(state),\n  nodes: getLayoutNodes(state),\n  textLabels: state.textLabels,\n  view: state.view,\n  zoom: getZoomPosition(state)\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeClicked: nodeClicked => {\n    dispatch(toggleNodeClicked(nodeClicked));\n  },\n  onToggleNodeHovered: nodeHovered => {\n    dispatch(toggleNodeHovered(nodeHovered));\n  },\n  onUpdateChartSize: chartSize => {\n    dispatch(updateChartSize(chartSize));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FlowChart);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport Dropdown from '@quantumblack/kedro-ui/lib/components/dropdown';\nimport '@quantumblack/kedro-ui/lib/components/menu-option/menu-option.css';\nimport { toggleTagActive, toggleTagFilter } from '../../actions';\nimport { getTagData, getTagCount } from '../../selectors/tags';\nimport './tag-list.css';\n\n/**\n * A Dropdown displaying a list of tags with checkboxes to toggle them on/off\n * @param {Object} tagCount Number of enabled and active tags\n * @param {Function} onToggleTagActive Handle toggling a tag's active state\n * @param {Function} onToggleTagFilter Handle toggling a tag's enabled state\n * @param {Array} tags List of tags for given pipline\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const TagList = ({\n  tagCount,\n  onToggleTagActive,\n  onToggleTagFilter,\n  tags,\n  theme\n}) => (\n  <div className=\"pipeline-tags\">\n    <Dropdown\n      theme={theme}\n      width={null}\n      defaultText={`Tag filters (${tagCount.enabled}/${tagCount.total})`}>\n      <React.Fragment>\n        {tagCount.total > 0 ? (\n          <ul className=\"pipeline-tags__tag-list\">\n            {tags.map(tag => (\n              <li\n                key={`tag-${tag.id}`}\n                title={tag.name}\n                className=\"pipeline-tags__tag-list-item kui-menu-option\"\n                onMouseEnter={() => onToggleTagActive(tag.id, true)}\n                onMouseLeave={() => onToggleTagActive(tag.id, false)}>\n                <Checkbox\n                  checked={tag.enabled}\n                  label={<span>{tag.name}</span>}\n                  name={tag.id}\n                  onChange={(e, { checked }) =>\n                    onToggleTagFilter(tag.id, checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <div className=\"pipeline-tags__empty kui-menu-option\">\n            There are no tags used in this pipeline.\n          </div>\n        )}\n      </React.Fragment>\n    </Dropdown>\n  </div>\n);\n\nexport const mapStateToProps = state => {\n  const tags = getTagData(state);\n  const tagCount = getTagCount(state);\n  return {\n    tagCount,\n    tags,\n    theme: state.theme\n  };\n};\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTagActive: (tagID, active) => {\n    dispatch(toggleTagActive(tagID, active));\n  },\n  onToggleTagFilter: (tagID, enabled) => {\n    dispatch(toggleTagFilter(tagID, enabled));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TagList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport Checkbox from '@quantumblack/kedro-ui/lib/components/checkbox';\nimport SearchBar from '@quantumblack/kedro-ui/lib/components/search-bar';\nimport utils from '@quantumblack/kedro-ui/lib/utils';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { getNodeData } from '../../selectors/nodes';\nimport {\n  toggleNodeHovered,\n  toggleNodeDisabled,\n  toggleNodesDisabled\n} from '../../actions';\nimport './node-list.css';\n\nconst { escapeRegExp, getHighlightedText, handleKeyEvent } = utils;\n\n/**\n * Scrollable list of toggleable nodes, with search & filter functionality\n */\nclass NodeList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchValue: ''\n    };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n    this.updateSearchValue = this.updateSearchValue.bind(this);\n  }\n\n  /**\n   * Add a new highlightedLabel field to each of the results\n   * @param {object} results\n   * @return {object} The results array with a new field added\n   */\n  highlightMatch(results) {\n    return results.map(result => ({\n      highlightedLabel: getHighlightedText(result.name, this.state.searchValue),\n      ...result\n    }));\n  }\n\n  /**\n   * Check whether a name matches the search text\n   * @param {string} name\n   * @param {string} searchValue\n   */\n  nodeMatchesSearch(node, searchValue) {\n    const valueRegex = searchValue\n      ? new RegExp(escapeRegExp(searchValue), 'gi')\n      : '';\n    return node.name.match(valueRegex);\n  }\n\n  /**\n   * Return only the results that match the search text\n   * @param {object} results\n   */\n  filterResults(results) {\n    return results.filter(node =>\n      this.nodeMatchesSearch(node, this.state.searchValue)\n    );\n  }\n\n  /**\n   * Listen for keyboard events, and trigger relevant actions\n   * @param {number} keyCode The key event keycode\n   */\n  handleKeyDown(event) {\n    handleKeyEvent(event.keyCode, {\n      escape: this.updateSearchValue.bind(this, '')\n    });\n  }\n\n  /**\n   * Apply the new search filter text to the component state\n   * @param {string} searchValue The term being searched\n   */\n  updateSearchValue(searchValue) {\n    this.setState({\n      searchValue\n    });\n  }\n\n  render() {\n    const {\n      onToggleAllNodes,\n      onToggleNodeHovered,\n      onToggleNodeDisabled,\n      nodes,\n      theme\n    } = this.props;\n    const { searchValue } = this.state;\n    const formattedNodes = this.highlightMatch(this.filterResults(nodes));\n\n    return (\n      <React.Fragment>\n        <div\n          className=\"pipeline-node-list-search\"\n          onKeyDown={this.handleKeyDown}>\n          <SearchBar\n            onChange={this.updateSearchValue}\n            value={searchValue}\n            theme={theme}\n          />\n        </div>\n        <Scrollbars\n          className=\"pipeline-node-list-scrollbars\"\n          style={{ width: 'auto' }}\n          autoHide\n          hideTracksWhenNotNeeded>\n          <div className=\"kedro\">\n            <h2 className=\"pipeline-node-list__toggle-title\">All Elements</h2>\n            <div className=\"pipeline-node-list__toggle-container\">\n              <button\n                onClick={() => onToggleAllNodes(formattedNodes, false)}\n                className=\"pipeline-node-list__toggle\">\n                <svg\n                  className=\"pipeline-node-list__icon pipeline-node-list__icon--check\"\n                  width=\"24\"\n                  height=\"24\">\n                  <polygon points=\"9.923 14.362 7.385 11.944 6 13.263 7.33384369 14.5336026 9.923 17 18 9.32 16.615 8\" />\n                </svg>\n                Check all\n              </button>\n              <button\n                onClick={() => onToggleAllNodes(formattedNodes, true)}\n                className=\"pipeline-node-list__toggle\">\n                <svg\n                  className=\"pipeline-node-list__icon pipeline-node-list__icon--uncheck\"\n                  width=\"24\"\n                  height=\"24\">\n                  <path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\" />\n                </svg>\n                Uncheck all\n              </button>\n            </div>\n          </div>\n          <ul className=\"pipeline-node-list\">\n            {formattedNodes.map(node => (\n              <li\n                key={node.id}\n                className={classnames('pipeline-node', {\n                  'pipeline-node--active': node.active,\n                  'pipeline-node--disabled':\n                    node.disabled_tag || node.disabled_view\n                })}\n                title={node.name}\n                onMouseEnter={() => onToggleNodeHovered(node.id)}\n                onMouseLeave={() => onToggleNodeHovered(null)}>\n                <Checkbox\n                  checked={!node.disabled_node}\n                  label={\n                    <span\n                      dangerouslySetInnerHTML={{\n                        __html: node.highlightedLabel\n                      }}\n                    />\n                  }\n                  name={node.name}\n                  onChange={(e, { checked }) =>\n                    onToggleNodeDisabled(node, !checked)\n                  }\n                  theme={theme}\n                />\n              </li>\n            ))}\n          </ul>\n        </Scrollbars>\n      </React.Fragment>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  nodes: getNodeData(state),\n  theme: state.theme\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleNodeHovered: nodeID => {\n    dispatch(toggleNodeHovered(nodeID));\n  },\n  onToggleNodeDisabled: (node, isDisabled) => {\n    dispatch(toggleNodeDisabled(node.id, isDisabled));\n  },\n  onToggleAllNodes: (formattedNodes, disabled) => {\n    dispatch(\n      toggleNodesDisabled(formattedNodes.map(node => node.id), disabled)\n    );\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(NodeList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RadioButton from '@quantumblack/kedro-ui/lib/components/radio-button';\nimport Toggle from '@quantumblack/kedro-ui/lib/components/toggle';\nimport { changeView, toggleParameters } from '../../actions';\nimport TagList from '../tag-list';\nimport NodeList from '../node-list';\nimport './chart-ui.css';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\n/**\n * Main contols for filtering the chart data\n * @param {Boolean} hasData Whether the chart data has been loaded\n * @param {Function} onToggleParameters Handle toggling parameters on/off\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Function} onChangeView Handle changing view between combined/task/data\n * @param {Boolean} parameters Whether parameters are displayed\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n * @param {string} view Which node types are displayed: combined/task/data\n */\nexport const ChartUI = ({\n  hasData,\n  onToggleParameters,\n  onChangeView,\n  parameters,\n  theme,\n  view\n}) =>\n  hasData ? (\n    <Scrollbars autoHide hideTracksWhenNotNeeded>\n      <div className=\"pipeline-ui\">\n        <ul className=\"pipeline-ui__view\">\n          <li>\n            <RadioButton\n              checked={view === 'combined'}\n              label=\"Combined\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"combined\"\n              theme={theme}\n            />\n          </li>\n          <li>\n            <RadioButton\n              checked={view === 'data'}\n              label=\"Data\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"data\"\n              theme={theme}\n            />\n          </li>\n          <li>\n            <RadioButton\n              checked={view === 'task'}\n              label=\"Node\"\n              name=\"view\"\n              onChange={onChangeView}\n              value=\"task\"\n              theme={theme}\n            />\n          </li>\n        </ul>\n        <Toggle\n          onChange={onToggleParameters}\n          label=\"Parameters\"\n          value={parameters}\n          checked={parameters}\n          theme={theme}\n        />\n        <TagList />\n        <NodeList />\n      </div>\n    </Scrollbars>\n  ) : null;\n\nexport const mapStateToProps = state => ({\n  hasData: Boolean(state.nodes.length),\n  parameters: state.parameters,\n  theme: state.theme,\n  view: state.view\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onChangeView: (e, { value }) => {\n    dispatch(changeView(value));\n  },\n  onToggleParameters: (e, { value }) => {\n    dispatch(toggleParameters(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ChartUI);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <rect x=\"2\" y=\"5\" width=\"20\" height=\"2\" />\n    <rect x=\"2\" y=\"11\" width=\"20\" height=\"2\" />\n    <rect x=\"2\" y=\"17\" width=\"20\" height=\"2\" />\n  </svg>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport Icon from '@quantumblack/kedro-ui/lib/components/icon';\nimport ChartUI from '../chart-ui';\nimport MenuIcon from '../icons/menu';\nimport './sidebar.css';\n\n/**\n * Hamburger menu button\n * @param {Function} props.onToggle Show menu on click\n * @param {Boolean} props.visible Whether nav is visible\n */\nexport const ShowMenuButton = ({ onToggle, visible }) => (\n  <button\n    aria-label=\"Show menu\"\n    className={classnames(\n      'pipeline-sidebar__show-menu pipeline-sidebar__icon-button',\n      {\n        'pipeline-sidebar__icon-button--visible': visible\n      }\n    )}\n    onClick={onToggle}>\n    <MenuIcon className=\"pipeline-icon\" />\n  </button>\n);\n\n/**\n * ⨉-shaped button to close the menu. Hidden when menu is closed.\n * @param {Function} props.onToggle Show menu on click\n * @param {string} props.theme Kedro-UI theme: 'light' or 'dark'\n * @param {Boolean} props.visible Whether nav is visible\n */\nexport const HideMenuButton = ({ onToggle, theme, visible }) => (\n  <button\n    aria-label=\"Hide menu\"\n    className={classnames(\n      'pipeline-sidebar__hide-menu pipeline-sidebar__icon-button',\n      {\n        'pipeline-sidebar__icon-button--visible': visible\n      }\n    )}\n    onClick={onToggle}>\n    <Icon type=\"close\" title=\"Close\" theme={theme} />\n  </button>\n);\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n * @param {Object} props onToggle, theme, and visible\n */\nconst Sidebar = props => (\n  <>\n    <ShowMenuButton onToggle={props.onToggle} visible={!props.visible} />\n    <nav\n      className={classnames('pipeline-sidebar', {\n        'pipeline-sidebar--visible': props.visible\n      })}>\n      <HideMenuButton {...props} />\n      <ChartUI />\n    </nav>\n  </>\n);\n\nexport default Sidebar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport LabelIcon from '../icons/label';\nimport ThemeIcon from '../icons/theme';\nimport ExportIcon from '../icons/export';\n\nconst icons = {\n  label: LabelIcon,\n  theme: ThemeIcon,\n  export: ExportIcon\n};\n\n/**\n * Icon button component\n * @param {Function} onToggle Handle toggling theme between light/dark\n * @param {string} theme Kedro UI light/dark theme\n */\nconst IconButton = ({\n  ariaLabel,\n  ariaLive,\n  icon,\n  labelText,\n  onClick,\n  visible\n}) => {\n  const Icon = icons[icon];\n\n  return visible ? (\n    <li>\n      <button\n        aria-label={ariaLabel}\n        aria-live={ariaLive}\n        className=\"pipeline-icon-button\"\n        onClick={onClick}>\n        <span>{labelText}</span>\n        <Icon className=\"pipeline-icon\" />\n      </button>\n    </li>\n  ) : null;\n};\n\nIconButton.propTypes = {\n  ariaLabel: PropTypes.string,\n  ariaLive: PropTypes.string,\n  icon: PropTypes.string,\n  labelText: PropTypes.string,\n  onClick: PropTypes.func,\n  visible: PropTypes.bool\n};\n\nIconButton.defaultProps = {\n  ariaLabel: null,\n  ariaLive: null,\n  icon: 'label',\n  labelText: null,\n  onClick: null,\n  visible: true\n};\n\nexport default IconButton;\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 22 20\">\n    <path d=\"M22 0v20H7.3L0 10 7.3 0H22zm-6.2 5h-3.6L10 15h2l.3-1.8h3.4L16 15H18L15.8 5zm-1.5 1.7l1 4.7h-2.6l1-4.7h.6z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\">\n    <path d=\"M10 0a10 10 0 1 1 0 20 10 10 0 0 1 0-20zm0 2v16a8 8 0 1 0 0-16z\" />\n  </svg>\n);\n","import React from 'react';\n\nexport default ({ className }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\">\n    <path d=\"M5 16v4h14v-4h2v4c0 1-.8 2-1.9 2H5a2 2 0 01-2-2v-4h2zm8-14v11l3.5-3.5L18 11l-6 6-6-6 1.5-1.5L11 13V2h2z\" />\n  </svg>\n);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Modal from '@quantumblack/kedro-ui/lib/components/modal';\nimport Button from '@quantumblack/kedro-ui/lib/components/button';\nimport { getGraphSize } from '../../selectors/layout';\nimport downloadSvg, { downloadPng } from 'svg-crowbar';\n\n/**\n * Handle onClick for the SVG/PNG download button\n * @param {Function} download SVG-crowbar function to download SVG or PNG\n * @param {number} param.width Graph width\n * @param {number} param.height Graph height\n * @return {Function} onClick handler\n */\nexport const exportGraph = (download, { width, height }) => {\n  const svg = document.querySelector('#pipeline-graph');\n  // Create clone of graph SVG to avoid breaking the original\n  const clone = svg.parentNode.appendChild(svg.cloneNode(true));\n  // Reset zoom/translate\n  clone.setAttribute('width', width);\n  clone.setAttribute('height', height);\n  clone.querySelector('#zoom-wrapper').removeAttribute('transform');\n  // Add webfont\n  const style = document.createElement('style');\n  style.innerHTML =\n    '@import url(https://fonts.googleapis.com/css?family=Titillium+Web:400);';\n  clone.prepend(style);\n  // Download SVG/PNG\n  download(clone, 'kedro-pipeline');\n  // Delete cloned SVG\n  svg.parentNode.removeChild(clone);\n};\n\n/**\n * Kedro-UI modal to allow users to choose between SVG/PNG export formats\n */\nconst ExportModal = ({ graphSize, theme, toggleModal, visible }) => (\n  <Modal\n    title=\"Export pipeline visualisation\"\n    onClose={() => toggleModal(false)}\n    theme={theme}\n    visible={visible}>\n    <div className=\"pipeline-icon-modal\">\n      <Button\n        theme={theme}\n        onClick={() => {\n          exportGraph(downloadPng, graphSize);\n          toggleModal(false);\n        }}>\n        Download PNG\n      </Button>\n      <Button\n        theme={theme}\n        onClick={() => {\n          exportGraph(downloadSvg, graphSize);\n          toggleModal(false);\n        }}>\n        Download SVG\n      </Button>\n    </div>\n  </Modal>\n);\n\nexport const mapStateToProps = state => ({\n  graphSize: getGraphSize(state),\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(ExportModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { toggleTextLabels, toggleTheme } from '../../actions';\nimport IconButton from './icon-button';\nimport ExportModal from './export-modal';\nimport './icon-toolbar.css';\n\n/**\n * Main contols for filtering the chart data\n * @param {Function} onToggleTheme Handle toggling theme between light/dark\n * @param {Function} onToggleTextLabels Handle toggling text labels on/off\n * @param {Boolean} textLabels Whether text labels are displayed\n * @param {string} theme Kedro UI light/dark theme\n */\nexport const IconToolbar = ({\n  onToggleTextLabels,\n  onToggleTheme,\n  textLabels,\n  theme,\n  visible\n}) => {\n  const [isModalVisible, toggleModal] = useState(false);\n\n  return (\n    <>\n      <ul className=\"pipeline-icon-toolbar kedro\">\n        <IconButton\n          ariaLive=\"polite\"\n          ariaLabel={`Change to ${theme === 'light' ? 'dark' : 'light'} theme`}\n          onClick={() => onToggleTheme(theme === 'light' ? 'dark' : 'light')}\n          icon=\"theme\"\n          labelText=\"Toggle theme\"\n          visible={visible.themeBtn}\n        />\n        <IconButton\n          ariaLive=\"polite\"\n          onClick={() => onToggleTextLabels(!textLabels)}\n          icon=\"label\"\n          labelText={`${textLabels ? 'Hide' : 'Show'} text labels`}\n          visible={visible.labelBtn}\n        />\n        <IconButton\n          ariaLabel=\"Export graph as SVG or PNG\"\n          onClick={() => toggleModal(true)}\n          icon=\"export\"\n          labelText=\"Export visualisation\"\n          visible={visible.exportBtn}\n        />\n      </ul>\n      {visible.exportBtn && (\n        <ExportModal visible={isModalVisible} toggleModal={toggleModal} />\n      )}\n    </>\n  );\n};\n\nexport const mapStateToProps = state => ({\n  textLabels: state.textLabels,\n  theme: state.theme,\n  visible: state.visible\n});\n\nexport const mapDispatchToProps = dispatch => ({\n  onToggleTextLabels: value => {\n    dispatch(toggleTextLabels(Boolean(value)));\n  },\n  onToggleTheme: value => {\n    dispatch(toggleTheme(value));\n  }\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IconToolbar);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport classnames from 'classnames';\nimport FlowChart from '../flowchart';\nimport Sidebar from '../sidebar';\nimport IconToolbar from '../icon-toolbar';\nimport './wrapper.css';\n\n/**\n * Main app container. Handles showing/hiding the sidebar nav, and theme classes.\n */\nexport class Wrapper extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      visibleNav: true\n    };\n  }\n\n  toggleNav() {\n    const visibleNav = !this.state.visibleNav;\n    this.setState({ visibleNav });\n  }\n\n  render() {\n    const { visibleNav } = this.state;\n    const { fontLoaded, theme } = this.props;\n\n    return (\n      <div\n        className={classnames('kedro-pipeline', {\n          'kui-theme--dark': theme === 'dark',\n          'kui-theme--light': theme === 'light'\n        })}>\n        <Sidebar\n          onToggle={this.toggleNav.bind(this)}\n          theme={theme}\n          visible={visibleNav}\n        />\n        {fontLoaded && <IconToolbar />}\n        <div className=\"pipeline-wrapper\">\n          {fontLoaded && <FlowChart visibleNav={visibleNav} />}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = state => ({\n  fontLoaded: state.fontLoaded,\n  theme: state.theme\n});\n\nexport default connect(mapStateToProps)(Wrapper);\n","/**\n * Check whether data is in expected format\n * @param {Object} data - The parsed data input\n * @return {Boolean} True if valid for formatting\n */\nconst validateInput = data => {\n  const { isArray } = Array;\n  return (\n    data && isArray(data.edges) && isArray(data.nodes) && isArray(data.tags)\n  );\n};\n\n/**\n * Get unique, reproducible ID for each edge, based on its nodes\n * @param {Object} source - Name and type of the source node\n * @param {Object} target - Name and type of the target node\n */\nconst getEdgeID = (source, target) => [source, target].join('|');\n\n/**\n * Generate a new default pipeline state instance\n * @return {Object} Initial state\n */\nconst createPipelineState = () => ({\n  id: null,\n  // Nodes\n  nodes: [],\n  nodeName: {},\n  nodeFullName: {},\n  nodeType: {},\n  nodeIsParam: {},\n  nodeTags: {},\n  nodeDisabled: {},\n  nodeClicked: null,\n  nodeHovered: null,\n  // Edges\n  edges: [],\n  edgeSources: {},\n  edgeTargets: {},\n  edgeActive: {},\n  edgeDisabled: {},\n  // Tags\n  tags: [],\n  tagName: {},\n  tagActive: {},\n  tagEnabled: {}\n});\n\n/**\n * Add a new node if it doesn't already exist\n * @param {string} name - Default node name\n * @param {string} type - 'data' or 'task'\n * @param {Array} tags - List of associated tags\n */\nconst addNode = state => node => {\n  const { id } = node;\n  if (state.nodeName[id]) {\n    return;\n  }\n  state.nodes.push(id);\n  state.nodeName[id] = node.name;\n  state.nodeFullName[id] = node.full_name || node.name;\n  state.nodeType[id] = node.type;\n  state.nodeIsParam[id] = node.type === 'parameters';\n  state.nodeTags[id] = node.tags || [];\n};\n\n/**\n * Create a new link between two nodes and add it to the edges array\n * @param {Object} source - Parent node\n * @param {Object} target - Child node\n */\nconst addEdge = state => ({ source, target }) => {\n  const id = getEdgeID(source, target);\n  if (state.edges.includes(id)) {\n    return;\n  }\n  state.edges.push(id);\n  state.edgeSources[id] = source;\n  state.edgeTargets[id] = target;\n};\n\n/**\n * Add a new Tag if it doesn't already exist\n * @param {string} name - Default node name\n */\nconst addTag = state => tag => {\n  const { id } = tag;\n  state.tags.push(id);\n  state.tagName[id] = tag.name;\n};\n\n/**\n * Convert the pipeline data into a normalised state object\n * @param {Object} data Raw unformatted data input\n * @return {Object} Formatted, normalised state\n */\nconst formatData = data => {\n  const state = createPipelineState();\n\n  if (validateInput(data)) {\n    state.id = data.schema_id;\n    data.nodes.forEach(addNode(state));\n    data.edges.forEach(addEdge(state));\n    data.tags.forEach(addTag(state));\n  }\n\n  return state;\n};\n\nexport default formatData;\n","import { loadState } from '../../utils';\n\n/**\n * Configure the redux store's initial state\n * @param {Object}   pipelineData Formatted pipeline data\n * @param {Object}   props App component props\n */\nconst getInitialState = (pipelineData, props = {}) => {\n  // Load properties from localStorage if defined, else use defaults\n  const {\n    parameters = true,\n    textLabels = true,\n    theme = 'dark',\n    view = 'combined'\n  } = loadState();\n\n  const visible = Object.assign(\n    { exportBtn: true, labelBtn: true, themeBtn: true },\n    props.visible\n  );\n\n  return {\n    ...pipelineData,\n    chartSize: {},\n    fontLoaded: false,\n    parameters,\n    textLabels,\n    view,\n    visible,\n    theme: props.theme || theme\n  };\n};\n\nexport default getInitialState;\n","import {\n  getNumberArray,\n  randomIndex,\n  randomNumber,\n  getRandom,\n  getRandomName,\n  unique\n} from './index';\n\n//--- Config variables ---//\n\nconst DATA_NODE_COUNT = 30;\nconst MAX_CONNECTED_NODES = 4;\nconst MAX_LAYER_COUNT = 20;\nconst MAX_NODE_TAG_COUNT = 5;\nconst MAX_TAG_COUNT = 20;\nconst PARAMETERS_FREQUENCY = 0.05;\nconst TASK_NODE_COUNT = 10;\n\n/**\n * Generate a random pipeline dataset\n */\nclass Pipeline {\n  constructor() {\n    this.CONNECTION_COUNT = randomNumber(MAX_CONNECTED_NODES);\n    this.LAYER_COUNT = randomNumber(MAX_LAYER_COUNT);\n    this.TAG_COUNT = randomNumber(MAX_TAG_COUNT);\n    this.nodes = this.getNodes();\n    this.tags = this.generateTags();\n  }\n\n  /**\n   * Generate a name for each node.\n   * Put 'parameters_' in front of 1 in 20.\n   * @param {number} paramFreq How often nodes should include 'parameters' in their name\n   */\n  getRandomNodeName(paramFreq) {\n    const name = getRandomName(randomNumber(10));\n    const params = Math.random() < paramFreq ? 'parameters_' : '';\n    return params + name;\n  }\n\n  /**\n   * Generate a list of nodes\n   * @param {number} count The number of nodes to generate\n   * @param {Function} getLayer A callback to create a random layer number\n   * @param {number} paramFreq How often nodes should include 'parameters' in their name\n   * @param {string} type\n   */\n  generateNodeList(count, getLayer, paramFreq, type) {\n    return getNumberArray(count)\n      .map(() => this.getRandomNodeName(paramFreq))\n      .filter(unique)\n      .map(id => {\n        const name = id.replace(/_/g, ' ');\n        return {\n          id: `${type}/${id}`,\n          name,\n          full_name: `${name} (${name})`,\n          type: id.includes('param') ? 'parameters' : type,\n          layer: getLayer()\n        };\n      });\n  }\n\n  /**\n   * Get lists of both data and task nodes\n   */\n  getNodes() {\n    return {\n      data: this.generateNodeList(\n        DATA_NODE_COUNT,\n        () => randomIndex(this.LAYER_COUNT + 1),\n        PARAMETERS_FREQUENCY,\n        'data'\n      ),\n      task: this.generateNodeList(\n        TASK_NODE_COUNT,\n        () => randomIndex(this.LAYER_COUNT) + 0.5,\n        0,\n        'task'\n      )\n    };\n  }\n\n  /**\n   * Generate a random list of tags\n   */\n  generateTags() {\n    return getNumberArray(this.TAG_COUNT)\n      .map(() => getRandomName(randomNumber(MAX_NODE_TAG_COUNT)))\n      .filter(unique);\n  }\n\n  /**\n   * Select a random number of tags from the list of tags\n   */\n  getRandomTags() {\n    return getNumberArray(randomNumber(this.TAG_COUNT))\n      .map(() => this.tags[randomIndex(this.tags.length)])\n      .filter(unique);\n  }\n\n  /**\n   * Get connected data nodes for each task node\n   * @param {Function} condition Determine order of precedence\n   */\n  getConnectedNodes(condition) {\n    return getNumberArray(this.CONNECTION_COUNT)\n      .map(() => getRandom(this.nodes.data.filter(condition)))\n      .filter(Boolean)\n      .map(d => d.id)\n      .filter(unique);\n  }\n\n  /**\n   * Get a complete JSON schema\n   */\n  getSchema() {\n    let nodes = this.nodes.task\n      .concat(this.nodes.data)\n      .map(node => ({ ...node, tags: this.getRandomTags() }));\n\n    const edges = [];\n    this.nodes.task.forEach(node => {\n      this.getConnectedNodes(d => d.layer < node.layer).forEach(target => {\n        edges.push({\n          source: node.id,\n          target\n        });\n      });\n      this.getConnectedNodes(d => d.layer > node.layer).forEach(source => {\n        edges.push({\n          source,\n          target: node.id\n        });\n      });\n    });\n\n    // Remove unconnected nodes\n    nodes = nodes.filter(\n      node =>\n        edges.findIndex(\n          edge => node.id === edge.source || node.id === edge.target\n        ) !== -1\n    );\n\n    const tags = nodes\n      .reduce((tags, node) => tags.concat(node.tags), [])\n      .filter(unique)\n      .map(tag => ({ name: tag, id: tag }));\n\n    return {\n      nodes,\n      edges,\n      tags\n    };\n  }\n\n  /**\n   * Generate the full pipeline datum\n   */\n  getDatum() {\n    return this.getSchema();\n  }\n}\n\nconst generateRandomPipeline = () => new Pipeline().getDatum();\n\nexport default generateRandomPipeline;\n","export default {\n  schema_id: '310750827599783',\n  tags: [\n    {\n      id: 'Nulla',\n      name: 'Nulla'\n    },\n    {\n      id: 'pulvinar',\n      name: 'pulvinar'\n    },\n    {\n      id: 'volutpat',\n      name: 'volutpat'\n    },\n    {\n      id: 'enim',\n      name: 'enim'\n    },\n    {\n      id: 'consectetur',\n      name: 'consectetur'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/consectetur',\n      source: 'data/Lorem'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/ipsum'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/dolor'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/sit'\n    },\n    {\n      target: 'task/consectetur',\n      source: 'data/amet'\n    },\n    {\n      target: 'data/Aliquam',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/eu',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/accumsan',\n      source: 'task/consectetur'\n    },\n    {\n      target: 'data/mauris',\n      source: 'task/consectetur'\n    }\n  ],\n  nodes: [\n    {\n      tags: ['Nulla', 'pulvinar', 'enim', 'consectetur', 'volutpat'],\n      id: 'task/consectetur',\n      type: 'task',\n      full_name: 'consectetur',\n      name: 'consectetur'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/mauris',\n      type: 'data',\n      full_name: 'mauris',\n      name: 'mauris'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Lorem',\n      type: 'data',\n      full_name: 'Lorem',\n      name: 'Lorem'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/dolor',\n      type: 'data',\n      full_name: 'dolor',\n      name: 'dolor'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/eu',\n      type: 'data',\n      full_name: 'eu',\n      name: 'eu'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/accumsan',\n      type: 'data',\n      full_name: 'accumsan',\n      name: 'accumsan'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/ipsum',\n      type: 'data',\n      full_name: 'ipsum',\n      name: 'ipsum'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/sit',\n      type: 'data',\n      full_name: 'sit',\n      name: 'sit'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/Aliquam',\n      type: 'data',\n      full_name: 'Aliquam',\n      name: 'Aliquam'\n    },\n    {\n      tags: ['Nulla', 'pulvinar', 'volutpat', 'enim', 'consectetur'],\n      id: 'data/amet',\n      type: 'data',\n      full_name: 'amet',\n      name: 'amet'\n    }\n  ]\n};\n","export default {\n  schema_id: '09876543210987654321',\n  tags: [\n    {\n      id: 'small',\n      name: 'small'\n    },\n    {\n      id: 'huge',\n      name: 'huge'\n    }\n  ],\n  nodes: [\n    {\n      id: 'task/salmon',\n      name: 'salmon',\n      full_name: 'salmon',\n      tags: ['huge', 'small'],\n      type: 'task'\n    },\n    {\n      id: 'task/shark',\n      name: 'shark',\n      full_name: 'shark',\n      tags: [],\n      type: 'task'\n    },\n    {\n      id: 'task/trout',\n      name: 'trout',\n      full_name: 'trout',\n      tags: [],\n      type: 'task'\n    },\n    {\n      id: 'data/whale',\n      name: 'whale',\n      full_name: 'whale',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/dog',\n      name: 'dog',\n      full_name: 'dog',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/cat',\n      name: 'cat',\n      full_name: 'cat',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/parameters_rabbit',\n      name: 'parameters_rabbit',\n      full_name: 'parameters_rabbit',\n      tags: ['small', 'huge'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/parameters',\n      name: 'parameters',\n      full_name: 'parameters',\n      tags: ['small', 'huge'],\n      type: 'parameters'\n    },\n    {\n      id: 'data/sheep',\n      name: 'sheep',\n      full_name: 'sheep',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/horse',\n      name: 'horse',\n      full_name: 'horse',\n      tags: ['small', 'huge'],\n      type: 'data'\n    },\n    {\n      id: 'data/weasel',\n      name: 'weasel',\n      full_name: 'weasel',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/elephant',\n      name: 'elephant',\n      full_name: 'elephant',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/bear',\n      name: 'bear',\n      full_name: 'bear',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/giraffe',\n      name: 'giraffe',\n      full_name: 'giraffe',\n      tags: [],\n      type: 'data'\n    },\n    {\n      id: 'data/pig',\n      name: 'pig',\n      full_name: 'pig',\n      tags: ['small', 'huge'],\n      type: 'data'\n    }\n  ],\n  edges: [\n    {\n      target: 'task/salmon',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/dog'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters'\n    },\n    {\n      target: 'task/salmon',\n      source: 'data/parameters_rabbit'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/horse',\n      source: 'task/salmon'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/salmon'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/cat'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/weasel'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/elephant'\n    },\n    {\n      target: 'task/shark',\n      source: 'data/bear'\n    },\n    {\n      target: 'data/sheep',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/pig',\n      source: 'task/shark'\n    },\n    {\n      target: 'data/giraffe',\n      source: 'task/shark'\n    },\n    {\n      target: 'task/trout',\n      source: 'data/pig'\n    },\n    {\n      target: 'data/whale',\n      source: 'task/trout'\n    }\n  ]\n};\n","export default {\n  schema_id: '12345678901234567890',\n  edges: [\n    {\n      source: '33920f3a',\n      target: '06c33e94'\n    },\n    {\n      source: '06c33e94',\n      target: '105160a0'\n    },\n    {\n      source: '814ef273',\n      target: '0b7e1ac6'\n    },\n    {\n      source: '0b7e1ac6',\n      target: '389b5286'\n    },\n    {\n      source: '58450007',\n      target: '22ea294c'\n    },\n    {\n      source: '22ea294c',\n      target: 'bcb40508'\n    },\n    {\n      source: '105160a0',\n      target: 'f1a163c4'\n    },\n    {\n      source: 'f1a163c4',\n      target: 'e44a096d'\n    },\n    {\n      source: '389b5286',\n      target: 'b2f97396'\n    },\n    {\n      source: 'b2f97396',\n      target: '8c1dcc36'\n    },\n    {\n      source: 'bcb40508',\n      target: '27bb9dc7'\n    },\n    {\n      source: '27bb9dc7',\n      target: '13a964bf'\n    },\n    {\n      source: '842a3580',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'e44a096d',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'fb5bd01d'\n    },\n    {\n      source: '13a964bf',\n      target: 'fb5bd01d'\n    },\n    {\n      source: 'fb5bd01d',\n      target: '55bd1af4'\n    },\n    {\n      source: '842a3580',\n      target: 'd52422da'\n    },\n    {\n      source: 'e44a096d',\n      target: 'd52422da'\n    },\n    {\n      source: '8c1dcc36',\n      target: 'd52422da'\n    },\n    {\n      source: '13a964bf',\n      target: 'd52422da'\n    },\n    {\n      source: 'd52422da',\n      target: '442c2c34'\n    },\n    {\n      source: '181c2b7c',\n      target: 'dcbb9652'\n    },\n    {\n      source: '057ade39',\n      target: 'dcbb9652'\n    },\n    {\n      source: 'dcbb9652',\n      target: '7eb64be0'\n    },\n    {\n      source: '181c2b7c',\n      target: 'c4cff5d0'\n    },\n    {\n      source: '42e79d42',\n      target: 'c4cff5d0'\n    },\n    {\n      source: 'c4cff5d0',\n      target: '842a3580'\n    },\n    {\n      source: '7eb64be0',\n      target: '95cfc42d'\n    },\n    {\n      source: '1b3afcba',\n      target: '95cfc42d'\n    },\n    {\n      source: '55bd1af4',\n      target: '95cfc42d'\n    },\n    {\n      source: '95cfc42d',\n      target: '8770a38e'\n    },\n    {\n      source: '95cfc42d',\n      target: '1dafa5fb'\n    },\n    {\n      source: '442c2c34',\n      target: 'ccbee9c5'\n    },\n    {\n      source: '3a60b3a4',\n      target: 'ccbee9c5'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'fb4f64bd'\n    },\n    {\n      source: 'ccbee9c5',\n      target: 'f4f3a276'\n    },\n    {\n      source: '1dafa5fb',\n      target: '394244dd'\n    },\n    {\n      source: '55bd1af4',\n      target: '394244dd'\n    },\n    {\n      source: '394244dd',\n      target: '792a14f6'\n    },\n    {\n      source: 'f4f3a276',\n      target: '67257e84'\n    },\n    {\n      source: '442c2c34',\n      target: '67257e84'\n    },\n    {\n      source: '67257e84',\n      target: '9bd2dc3d'\n    },\n    {\n      source: '1dafa5fb',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'dff067eb',\n      target: 'f6f50e64'\n    },\n    {\n      source: '55bd1af4',\n      target: 'f6f50e64'\n    },\n    {\n      source: 'f6f50e64',\n      target: '92f58611'\n    },\n    {\n      source: 'dff067eb',\n      target: 'e061482b'\n    },\n    {\n      source: 'f4f3a276',\n      target: 'e061482b'\n    },\n    {\n      source: '442c2c34',\n      target: 'e061482b'\n    },\n    {\n      source: 'e061482b',\n      target: 'b2a3a8e5'\n    },\n    {\n      source: '792a14f6',\n      target: '53b05b01'\n    },\n    {\n      source: '8770a38e',\n      target: '53b05b01'\n    },\n    {\n      source: 'fb4f64bd',\n      target: '6d8d326d'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '6d8d326d'\n    },\n    {\n      source: 'dff067eb',\n      target: '45bda5fd'\n    },\n    {\n      source: '9aeb6881',\n      target: '45bda5fd'\n    },\n    {\n      source: '92f58611',\n      target: '45bda5fd'\n    },\n    {\n      source: '45bda5fd',\n      target: '90713d4f'\n    },\n    {\n      source: 'dff067eb',\n      target: '211c92c3'\n    },\n    {\n      source: '92f58611',\n      target: '211c92c3'\n    },\n    {\n      source: '211c92c3',\n      target: '4704ff18'\n    },\n    {\n      source: 'dff067eb',\n      target: 'c17b9614'\n    },\n    {\n      source: '4704ff18',\n      target: 'c17b9614'\n    },\n    {\n      source: 'c17b9614',\n      target: 'ccd3d45b'\n    },\n    {\n      source: '90713d4f',\n      target: '90461ea7'\n    },\n    {\n      source: 'ccd3d45b',\n      target: '90461ea7'\n    },\n    {\n      source: '9bd2dc3d',\n      target: '90461ea7'\n    },\n    {\n      source: '792a14f6',\n      target: '90461ea7'\n    },\n    {\n      source: '4704ff18',\n      target: '90461ea7'\n    },\n    {\n      source: '90461ea7',\n      target: '3e3b263a'\n    },\n    {\n      source: '90461ea7',\n      target: 'f3e15708'\n    },\n    {\n      source: '90461ea7',\n      target: '83ebce11'\n    },\n    {\n      source: '90461ea7',\n      target: 'a72d7024'\n    },\n    {\n      source: '90461ea7',\n      target: '8dbed427'\n    }\n  ],\n  nodes: [\n    {\n      full_name: 'load_raw_interaction_data',\n      id: '06c33e94',\n      name: 'Load Raw Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_country_data',\n      id: '0b7e1ac6',\n      name: 'Load Raw Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'load_raw_shopper_spend_data',\n      id: '22ea294c',\n      name: 'Load Raw Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_interaction_data',\n      id: 'f1a163c4',\n      name: 'Preprocess Primary Interaction Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_country_data',\n      id: 'b2f97396',\n      name: 'Preprocess Primary Country Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'preprocess_primary_shopper_spend_data',\n      id: '27bb9dc7',\n      name: 'Preprocess Primary Shopper Spend Data',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_spend_features',\n      id: 'fb5bd01d',\n      name: 'Create Shopper Spend Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'create_shopper_churn_features',\n      id: 'd52422da',\n      name: 'Create Shopper Churn Features',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_vendor_input',\n      id: 'dcbb9652',\n      name: 'Prepare Vendor Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'prepare_crm_input',\n      id: 'c4cff5d0',\n      name: 'Prepare CRM Input',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_sales_model',\n      id: '95cfc42d',\n      name: 'Predictive Sales Model',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'predictive_engagement_model',\n      id: 'ccbee9c5',\n      name: 'Predictive Engagement Model',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_explainable_ai',\n      id: '394244dd',\n      name: 'Sales Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_explainable_ai',\n      id: '67257e84',\n      name: 'Engagement Model Explainable AI',\n      tags: ['model_explaination', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'perform_digital_analysis',\n      id: 'f6f50e64',\n      name: 'Perform Digital Analysis',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_recommendation_engine',\n      id: 'e061482b',\n      name: 'Engagement Recommendation Engine',\n      tags: ['model_training', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'sales_model_performance_monitoring',\n      id: '53b05b01',\n      name: 'Sales Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'engagement_model_performance_monitoring',\n      id: '6d8d326d',\n      name: 'Engagement Model Performance Monitoring',\n      tags: ['model_performance_monitoring', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'multi-channel_optimisation',\n      id: '45bda5fd',\n      name: 'Multi-Channel Optimisation',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'content_optimisation',\n      id: '211c92c3',\n      name: 'Content Optimisation',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'segment_journeys',\n      id: 'c17b9614',\n      name: 'Segment Journeys',\n      tags: ['optimisation', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'generate_dashboard_inputs',\n      id: '90461ea7',\n      name: 'Generate Dashboard Inputs',\n      tags: ['reporting', 'data_science'],\n      type: 'task'\n    },\n    {\n      full_name: 'interaction_raw',\n      id: '33920f3a',\n      name: 'Interaction Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_primary',\n      id: '105160a0',\n      name: 'Interaction Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_raw',\n      id: '814ef273',\n      name: 'Country Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_primary',\n      id: '389b5286',\n      name: 'Country Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_raw',\n      id: '58450007',\n      name: 'Shopper Spend Raw',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_primary',\n      id: 'bcb40508',\n      name: 'Shopper Spend Primary',\n      tags: ['data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'interaction_intermediate',\n      id: 'e44a096d',\n      name: 'Interaction Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'country_intermediate',\n      id: '8c1dcc36',\n      name: 'Country Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_intermediate',\n      id: '13a964bf',\n      name: 'Shopper Spend Intermediate',\n      tags: ['feature_engineering', 'data_engineering', 'preprocessing'],\n      type: 'data'\n    },\n    {\n      full_name: 'crm_predictions',\n      id: '842a3580',\n      name: 'CRM Predictions',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_spend_features',\n      id: '55bd1af4',\n      name: 'Shopper Spend Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'shopper_churn_features',\n      id: '442c2c34',\n      name: 'Shopper Churn Features',\n      tags: [\n        'data_science',\n        'model_training',\n        'model_explaination',\n        'feature_engineering',\n        'data_engineering'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_master',\n      id: '181c2b7c',\n      name: 'Vendor Master',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_crm',\n      id: '057ade39',\n      name: 'Salesforce CRM',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_predictions',\n      id: '7eb64be0',\n      name: 'Vendor Predictions',\n      tags: [\n        'feature_engineering',\n        'data_engineering',\n        'data_science',\n        'model_training'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'salesforce_accounts',\n      id: '42e79d42',\n      name: 'Salesforce Accounts',\n      tags: ['feature_engineering', 'data_engineering'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_sales_model',\n      id: '1b3afcba',\n      name: 'params: Sales Model',\n      tags: ['data_science', 'model_training'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'sales_validation_results',\n      id: '8770a38e',\n      name: 'Sales Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_trained_model',\n      id: '1dafa5fb',\n      name: 'Sales Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_engagement_model',\n      id: '3a60b3a4',\n      name: 'params: Engagement Model',\n      tags: ['data_science', 'model_training'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'engagement_validation_results',\n      id: 'fb4f64bd',\n      name: 'Engagement Validation Results',\n      tags: ['model_performance_monitoring', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_trained_model',\n      id: 'f4f3a276',\n      name: 'Engagement Trained Model',\n      tags: ['model_explaination', 'data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'sales_model_explanations',\n      id: '792a14f6',\n      name: 'Sales Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_model_explanations',\n      id: '9bd2dc3d',\n      name: 'Engagement Model Explanations',\n      tags: [\n        'model_explaination',\n        'data_science',\n        'model_performance_monitoring',\n        'reporting'\n      ],\n      type: 'data'\n    },\n    {\n      full_name: 'params:_optimisation',\n      id: 'dff067eb',\n      name: 'params: Optimisation',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      type: 'parameters'\n    },\n    {\n      full_name: 'digital_analysis',\n      id: '92f58611',\n      name: 'Digital Analysis',\n      tags: ['data_science', 'model_training', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'engagement_recommendations',\n      id: 'b2a3a8e5',\n      name: 'Engagement Recommendations',\n      tags: ['data_science', 'model_training'],\n      type: 'data'\n    },\n    {\n      full_name: 'action_cost_table',\n      id: '9aeb6881',\n      name: 'Action Cost Table',\n      tags: ['data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'multi-channel_resolutions',\n      id: '90713d4f',\n      name: 'Multi-Channel Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'content_resolutions',\n      id: '4704ff18',\n      name: 'Content Resolutions',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'segment_journeys_allocations',\n      id: 'ccd3d45b',\n      name: 'Segment Journeys Allocations',\n      tags: ['reporting', 'data_science', 'optimisation'],\n      type: 'data'\n    },\n    {\n      full_name: 'upselling_readiness_dashboard_input',\n      id: '3e3b263a',\n      name: 'Upselling Readiness Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'lead_scoring_dashboard_input',\n      id: 'f3e15708',\n      name: 'Lead Scoring Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'lifetime_value_prediction_dashboard_input',\n      id: '83ebce11',\n      name: 'Lifetime Value Prediction Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'digital_sales_dashboard_input',\n      id: 'a72d7024',\n      name: 'Digital Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    },\n    {\n      full_name: 'vendor_sales_dashboard_input',\n      id: '8dbed427',\n      name: 'Vendor Sales Dashboard Input',\n      tags: ['reporting', 'data_science'],\n      type: 'data'\n    }\n  ],\n  tags: [\n    {\n      id: 'model_performance_monitoring',\n      name: 'Model Performance Monitoring'\n    },\n    {\n      id: 'data_science',\n      name: 'Data Science'\n    },\n    {\n      id: 'reporting',\n      name: 'Reporting'\n    },\n    {\n      id: 'model_training',\n      name: 'Model Training'\n    },\n    {\n      id: 'preprocessing',\n      name: 'Preprocessing'\n    },\n    {\n      id: 'optimisation',\n      name: 'Optimisation'\n    },\n    {\n      id: 'model_explaination',\n      name: 'Model Explaination'\n    },\n    {\n      id: 'feature_engineering',\n      name: 'Feature Engineering'\n    },\n    {\n      id: 'data_engineering',\n      name: 'Data Engineering'\n    }\n  ]\n};\n","import { json } from 'd3-fetch';\nimport config from '../../config';\nimport getRandomPipeline from '../../utils/random-data';\nimport formatData from '../../utils/format-data';\nimport loremIpsum from '../../utils/data/lorem-ipsum.mock';\nimport animals from '../../utils/data/animals.mock';\nimport demo from '../../utils/data/demo.mock';\n\n/**\n * Asynchronously load, parse and format data from json file using D3\n */\nconst loadJsonData = () => {\n  const { dataPath } = config();\n  return json(dataPath)\n    .catch(() => {\n      throw new Error(\n        `Unable to load pipeline data from ${dataPath}. If you're running Kedro-Viz as a standalone (e.g. for JavaScript development), please check that you have placed a data file at /public${dataPath}.`\n      );\n    })\n    .then(formatData);\n};\n\n/**\n * Determine how data should be loaded (i.e. async from JSON, or randomly-generated,\n * or directly via props), then load and format it.\n * @param {string|Array} data Either raw data itself, or a 'json'/'random' string\n * @param {Function} onLoadData Callback for adding data to the store once loaded\n */\nconst loadData = (data, onLoadData) => {\n  switch (data) {\n    case 'random':\n      // Use randomly-generated data\n      return formatData(getRandomPipeline());\n    case 'lorem':\n      // Use data from the 'lorem-ipsum' test dataset\n      return formatData(loremIpsum);\n    case 'animals':\n      // Use data from the 'animals' test dataset\n      return formatData(animals);\n    case 'demo':\n      // Use data from the 'demo' test dataset\n      return formatData(demo);\n    case 'json':\n      // Load data from a local json file (in /public/api/nodes.json)\n      loadJsonData().then(onLoadData);\n      return formatData();\n    case null:\n      throw new Error('No data was provided to App component via props');\n    default:\n      // Use data provided via component prop\n      return formatData(data);\n  }\n};\n\nexport default loadData;\n","import { UPDATE_FONT_LOADED } from '../../actions';\n\n/**\n * Prevent chart from displaying until the webfont has loaded,\n * to ensure that text label SVGRect BBox measurements are accurate\n * @param {Object} store Redux store\n * @return {Promise} Resolves when font is detected as having loaded, or after 8 seconds\n */\nconst checkFontLoaded = store =>\n  new Promise(resolve => {\n    const { fonts } = document;\n    const fontName = '10px Titillium Web';\n    /**\n     * Dispatch an event to show the chart\n     */\n    const setLoaded = () => {\n      store.dispatch({ type: UPDATE_FONT_LOADED, fontLoaded: true });\n      resolve();\n    };\n\n    // If FontFaceSet is not supported then default to true immediately\n    if (!Boolean(fonts && fonts.check)) {\n      setLoaded();\n      return;\n    }\n\n    /**\n     * Check whether the webfont is ready, and show the chart if so\n     */\n    const checkIfLoaded = () => {\n      if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(setLoaded, 100);\n      }\n    };\n\n    /**\n     * Recursive requestAnimationFrame step function, which acts as a backup\n     * to the native FontFaceSet event handlers.\n     */\n    const step = () => {\n      // If it's been 8 seconds since page load then just set loaded=true\n      if (performance.now() > 8000) {\n        setLoaded();\n      } else if (fonts.check(fontName)) {\n        // Add 0.1s delay because fonts.check often returns true too early\n        setTimeout(setLoaded, 100);\n      } else {\n        requestAnimationFrame(step);\n      }\n    };\n\n    if (fonts.check(fontName)) {\n      // If the font is already loaded then dispatch immediately\n      setLoaded();\n    } else {\n      // Add event listenerss to detect when font has loaded, and display the chart.\n      // This uses both FontFaceSet.ready and FontFaceSet.onloadingdone, as the former\n      // often returns too early, and the latter often doesn't return at all.\n      if (fonts.ready) {\n        fonts.ready.then(checkIfLoaded);\n      }\n      fonts.onloadingdone = checkIfLoaded;\n      // Use requestAnimationFrame as a fallback for older browsers\n      requestAnimationFrame(step);\n    }\n  });\n\nexport default checkFontLoaded;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'react-redux';\nimport store from '../../store';\nimport { resetData } from '../../actions';\nimport Wrapper from '../wrapper';\nimport formatData from '../../utils/format-data';\nimport getInitialState from './initial-state';\nimport loadData from './load-data';\nimport checkFontLoaded from './check-font-loaded';\nimport '@quantumblack/kedro-ui/lib/styles/app.css';\nimport './app.css';\n\n/**\n * Main wrapper component. Handles store, and loads/formats pipeline data\n */\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const pipelineData = loadData(props.data, this.resetStoreData.bind(this));\n    const initialState = getInitialState(pipelineData, props);\n    this.store = store(initialState);\n    checkFontLoaded(this.store);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data.schema_id !== this.props.data.schema_id) {\n      this.resetStoreData(formatData(this.props.data));\n    }\n  }\n\n  /**\n   * Dispatch an action to update the store with new pipeline data\n   * @param {Object} formattedData Normalised state data\n   */\n  resetStoreData(formattedData) {\n    this.store.dispatch(resetData(formattedData));\n  }\n\n  render() {\n    return this.props.data ? (\n      <Provider store={this.store}>\n        <Wrapper />\n      </Provider>\n    ) : null;\n  }\n}\n\nApp.propTypes = {\n  data: PropTypes.oneOfType([\n    PropTypes.oneOf(['random', 'lorem', 'animals', 'demo', 'json']),\n    PropTypes.shape({\n      schema_id: PropTypes.string,\n      edges: PropTypes.array.isRequired,\n      nodes: PropTypes.array.isRequired,\n      tags: PropTypes.array\n    })\n  ]),\n  theme: PropTypes.oneOf(['dark', 'light']),\n  visible: PropTypes.shape({\n    labelBtn: PropTypes.bool,\n    themeBtn: PropTypes.bool\n  })\n};\n\nApp.defaultProps = {\n  /**\n   * Determines what pipeline data will be displayed on the chart.\n   * You can supply one of the following strings:\n     - 'random': Use randomly-generated data\n     - 'lorem': Use data from the 'lorem-ipsum' test dataset\n     - 'animals': Use data from the 'animals' test dataset\n     - 'demo': Use data from the 'demo' test dataset\n     - 'json': Load data from a local json file (in /public/api/nodes.json)\n   * Alternatively, you can supply an object containing lists of edges, nodes, tags.\n   * See /src/utils/data for examples of the expected data format.\n   */\n  data: null,\n  /**\n   * Specify the theme: Either 'light' or 'dark'.\n   * If set, this will override the localStorage value.\n   */\n  theme: null,\n  /**\n   * Show/hide the icon buttons with { labelBtn:false } and/or { themeBtn:false }\n   */\n  visible: {}\n};\n\nexport default App;\n","import { createStore } from 'redux';\nimport reducer from '../reducers';\nimport { saveState } from '../utils';\n\nexport default function configureStore(initialState) {\n  const store = createStore(reducer, initialState);\n\n  store.subscribe(() => {\n    const { parameters, textLabels, theme, view } = store.getState();\n    saveState({ parameters, textLabels, theme, view });\n  });\n\n  return store;\n}\n","import React from 'react';\nimport KonamiCode from 'konami-code';\nimport './easter-egg.css';\nimport mp3 from './brodyquest.mp3';\nimport img from './easter-egg.png';\n\n/**\n * Konami code Easter Egg component\n */\nclass EasterEgg extends React.Component {\n  /**\n   * Create new APP\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      play: false\n    };\n    console.info('Konami code is supported');\n\n    this.audio = new Audio(mp3);\n    this.audio.loop = true;\n    this._handleKeyDown = this._handleKeyDown.bind(this);\n  }\n\n  /**\n   * Called when mounted to view\n   */\n  componentDidMount() {\n    const konami = new KonamiCode();\n    konami.listen(this._toggleState.bind(this));\n    window.addEventListener('keydown', this._handleKeyDown);\n  }\n\n  /**\n   * Triggered when component state updates\n   */\n  componentDidUpdate() {\n    this._toggleAudio();\n    this._toggleCSS();\n  }\n\n  /**\n   * Called just before component is removed from the view\n   */\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this._handleKeyDown);\n    document.body.classList.remove('easter');\n  }\n\n  /**\n   * Handle keyboard interaction\n   * @param {Event} e\n   */\n  _handleKeyDown(e) {\n    const escape = e.keyCode === 27;\n    if (escape && this.state.play) {\n      this.setState({\n        play: false\n      });\n    }\n  }\n\n  /**\n   * Toggle play state on/off\n   */\n  _toggleState() {\n    this.setState({ play: !this.state.play });\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  _toggleAudio() {\n    if (this.state.play) {\n      this.audio.play();\n    } else {\n      this.audio.pause();\n    }\n  }\n\n  /**\n   * Play/Pause the mp3\n   */\n  _toggleCSS() {\n    if (this.state.play) {\n      document.body.classList.add('easter-theme');\n    } else {\n      document.body.classList.remove('easter-theme');\n    }\n  }\n\n  /**\n   * Render the component\n   * @return {ReactElement}\n   */\n  render() {\n    const { play } = this.state;\n    if (!play) {\n      return null;\n    }\n    return (\n      <div className=\"easter-egg\">\n        <img src={img} alt=\"\" width=\"500\" height=\"480\" />\n      </div>\n    );\n  }\n}\n\nexport default EasterEgg;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'what-input';\nimport App from './components/app';\nimport EasterEgg from './components/easter-egg';\nimport config from './config';\nimport './styles/index.css';\n\nconst { dataSource } = config();\n\nReactDOM.render(\n  <>\n    <App data={dataSource} />\n    <EasterEgg />\n  </>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}